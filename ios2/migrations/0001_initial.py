# Generated by Django 2.1.4 on 2019-04-12 21:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument_type', models.CharField(choices=[('CTD', 'CTD'), ('ADCP', 'ADCP'), ('OXY', 'OXY')], default='CTD', max_length=20, verbose_name='Instrument Type')),
                ('serial_number', models.CharField(default='0000', max_length=20, verbose_name='Serial ID')),
                ('purchase_date', models.DateField(blank=True, null=True, verbose_name='Purchase Date')),
                ('project_title', models.TextField(blank=True, null=True, verbose_name='Project title')),
                ('scientist', models.TextField(blank=True, null=True, verbose_name='Scientist')),
                ('date_of_next_service', models.DateField(blank=True, null=True, verbose_name='Next Service Date')),
                ('submitted', models.BooleanField(default=False, verbose_name='Submit instrument for review')),
            ],
            options={
                'ordering': ['instrument_type', 'serial_number', 'purchase_date', 'project_title'],
            },
        ),
        migrations.CreateModel(
            name='InstrumentMooring',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('depth', models.TextField(blank=True)),
                ('instrument', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='instrudeploy', to='ios2.Instrument', verbose_name='instrument')),
            ],
        ),
        migrations.CreateModel(
            name='Mooring',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mooring', models.CharField(blank=True, max_length=200, null=True, verbose_name='mooring name')),
                ('mooring_number', models.CharField(blank=True, max_length=200, null=True, verbose_name='mooring number')),
                ('deploy_time', models.DateTimeField(blank=True, null=True, verbose_name='deploy time (UTC)')),
                ('recover_time', models.DateTimeField(blank=True, null=True, verbose_name='recover time (UTC)')),
                ('lat', models.TextField(blank=True, null=True, verbose_name='lat')),
                ('lon', models.TextField(blank=True, null=True, verbose_name='lon')),
                ('depth', models.TextField(blank=True, null=True, verbose_name='depth')),
                ('orientation', models.TextField(blank=True, null=True, verbose_name='Orientation')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='comments')),
                ('submitted', models.BooleanField(default=False, verbose_name='Submit moorings for review')),
                ('instruments', models.ManyToManyField(blank=True, through='ios2.InstrumentMooring', to='ios2.Instrument')),
            ],
            options={
                'ordering': ['mooring', 'mooring_number'],
            },
        ),
        migrations.CreateModel(
            name='ServiceHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.IntegerField(choices=[(1, 'Calibration'), (2, 'Repair')], verbose_name='category')),
                ('service_date', models.DateField(blank=True, null=True, verbose_name='Service Date')),
                ('next_service_date', models.DateField(blank=True, null=True, verbose_name='Next Service Date')),
                ('comments', models.TextField(blank=True)),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service', to='ios2.Instrument', verbose_name='instrument')),
            ],
            options={
                'get_latest_by': ['service_date'],
            },
        ),
        migrations.AddField(
            model_name='instrumentmooring',
            name='mooring',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='instrudeploy', to='ios2.Mooring', verbose_name='mooring'),
        ),
        migrations.AlterUniqueTogether(
            name='instrument',
            unique_together={('instrument_type', 'serial_number')},
        ),
        migrations.AlterUniqueTogether(
            name='mooring',
            unique_together={('mooring', 'mooring_number')},
        ),
        migrations.AlterUniqueTogether(
            name='instrumentmooring',
            unique_together={('instrument', 'mooring')},
        ),
    ]
