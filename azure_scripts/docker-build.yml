pool: dmapps

trigger:
  - none

steps:
  - script: |
      # log into acr using msi
      az login --identity -u b9b8533b-430c-4b7a-95b7-0c8d43179f68
      az account set --subscription="IMTS DEV/TEST"
      az acr login --name dmappsdevtestacr

      # build the new docker image for the "latest" and the build number
      docker build \
        -t dmappsdevtestacr.azurecr.io/dmapps_img:latest \
        -t dmappsdevtestacr.azurecr.io/dmapps_img:$(Build.BuildNumber) .

      # push those images to ACR
      docker push dmappsdevtestacr.azurecr.io/dmapps_img:latest
      docker push dmappsdevtestacr.azurecr.io/dmapps_img:$(Build.BuildNumber)

      # if production tag is provided, do another build + push for the production tag
      if [ -n "$(productionTag)" ]
        then
        docker build -t dmappsdevtestacr.azurecr.io/dmapps_img:$(productionTag) .
        docker push dmappsdevtestacr.azurecr.io/dmapps_img:$(productionTag)
      else
        echo "No production tag provided."
      fi


    workingDirectory: '$(System.DefaultWorkingDirectory)'
    displayName: 'Build Docker Image and Push to ACR'


#pool:
#  vmImage: 'Ubuntu 18.04'
#
#trigger:
#- none
#
#resources:
#- repo: self
#
#variables:
#  azureServiceConnection: 'SP.dmappsdevacr'
#  imageRepository: 'dmapps_img'
#  tag: '$(Build.BuildNumber)'
#
#stages:
#- stage: Build
#  displayName: Build image
#  jobs:
#  - job: Build
#    displayName: Build
#    steps:
#    - task: Docker@2
#      displayName: Login to ACR
#      inputs:
#        command: login
#        containerRegistry: $(azureServiceConnection)
#
#    - task: Docker@2
#      displayName: Build and push image to Azure container registry
#      inputs:
#        command: buildAndPush
#        repository: $(imageRepository)
#        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
#        containerRegistry: $(azureServiceConnection)
#        tags: |
#          latest
#          $(tag)
#          $(productionTag)
#
#    - task: Docker@2
#      displayName: Logout from ACR
#      inputs:
#       command: logout
#       containerRegistry: $(azureServiceConnection)
