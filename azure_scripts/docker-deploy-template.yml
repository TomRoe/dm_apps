parameters:
  - name: AAD_APP_ID
    type: string

  - name: AAD_APP_SECRET
    type: string

  - name: AAD_REDIRECT
    type: string

  - name: AZURE_STORAGE_ACCOUNT_NAME
    type: string

  - name: azureSubscription
    type: string

  - name: DB_HOST
    type: string

  - name: DB_MODE
    type: string

  - name: DB_NAME
    type: string

  - name: DB_PASSWORD_PIPELINE
    type: string

  - name: DB_PASSWORD_WEB
    type: string

  - name: DB_USER_PIPELINE
    type: string

  - name: DB_USER_WEB
    type: string

  - name: DEBUG
    type: string

  - name: DEPLOYMENT_STAGE
    type: string

  - name: DockerNamespace
    type: string

  - name: DockerRepository
    type: string

  - name: DockerImageTag
    type: string

  - name: GITHUB_API_KEY
    type: string

  - name: SECRET_KEY
    type: string

  - name: SENDGRID_API_KEY
    type: string

  - name: SHOW_TICKETING_APP
    type: string

  - name: WEB_APP_NAME
    type: string

  - name: AZURE_CLIENT_ID
    type: string

  - name: AZURE_INSTRUMENTATION_KEY
    type: string

  - name: USE_AZURE_APPLICATION_INSIGHT
    type: string

steps:
  - script: |
      az login --identity -u ${{parameters.AZURE_CLIENT_ID}}
      # az account set --subscription="IMTS DEV/TEST"

      # install pre-requisites
      python3.8 -m pip install --upgrade pip setuptools wheel
      sudo apt-get install libmysqlclient-dev
      python3.8 -m pip install -r requirements.txt
      python3.8 -m pip uninstall -y django-easy-pdf
      python3.8 -m pip install git+https://github.com/pawanvirsingh/django-easy-pdf.git#egg=django-easy-pdf

      # create env file
      python3.8 create_env_file.py --db-host "${{parameters.DB_HOST}}" \
      --db-port 3306 \
      --db-name "${{parameters.DB_NAME}}" \
      --db-user "${{parameters.DB_USER_PIPELINE}}" \
      --db-password "${{parameters.DB_PASSWORD_PIPELINE}}" \
      --deployment-stage "${{parameters.DEPLOYMENT_STAGE}}" \
      --azure-storage-account-name "${{parameters.AZURE_STORAGE_ACCOUNT_NAME}}"

      # run migrations and collect static files
      python3.8 manage.py migrate
      python3.8 manage.py collectstatic --no-input

      # remove the env file
      rm .env


    workingDirectory: '$(System.DefaultWorkingDirectory)'
    displayName: 'Run Migrations and Staticfiles'

  - task: AzureRmWebAppDeployment@4
    displayName: 'Deploy Docker Image to ${{parameters.WEB_APP_NAME}}'
    inputs:
      ConnectedServiceName: '${{parameters.azureSubscription}}'
      appType: webAppContainer
      WebAppName: '${{parameters.WEB_APP_NAME}}'
      DockerNamespace: ${{parameters.DockerNamespace}}
      DockerRepository: ${{parameters.DockerRepository}}
      DockerImageTag: ${{parameters.DockerImageTag}}
      StartupCommand: init.sh
      AppSettings: >-
        -WEBSITES_PORT 8000
        -AAD_APP_ID ${{parameters.AAD_APP_ID}}
        -AAD_APP_SECRET ${{parameters.AAD_APP_SECRET}}
        -AAD_REDIRECT ${{parameters.AAD_REDIRECT}}
        -AZURE_STORAGE_ACCOUNT_NAME ${{parameters.AZURE_STORAGE_ACCOUNT_NAME}}
        -SECRET_KEY ${{parameters.SECRET_KEY}}
        -ALLOWED_HOST_TO_ADD ${{parameters.WEB_APP_NAME}}.azurewebsites.net
        -SITE_FROM_EMAIL "DoNotReply@Sci-Zone.dfo-mpo.gc.ca"
        -SHOW_TICKETING_APP ${{parameters.SHOW_TICKETING_APP}}
        -DEPLOYMENT_STAGE ${{parameters.DEPLOYMENT_STAGE}}
        -DB_HOST ${{parameters.DB_HOST}}
        -DB_MODE ${{parameters.DB_MODE}}
        -DB_NAME ${{parameters.DB_NAME}}
        -DB_USER ${{parameters.DB_USER_WEB}}
        -DB_PASSWORD ${{parameters.DB_PASSWORD_WEB}}
        -DB_PORT 3306
        -DEBUG ${{parameters.DEBUG}}
        -AZURE_INSTRUMENTATION_KEY ${{parameters.AZURE_INSTRUMENTATION_KEY}}
        -USE_AZURE_APPLICATION_INSIGHT ${{parameters.USE_AZURE_APPLICATION_INSIGHT}}
        -SENDGRID_API_KEY ${{parameters.SENDGRID_API_KEY}}
        -GITHUB_API_KEY ${{parameters.GITHUB_API_KEY}}
        -DEVOPS_BUILD_NUMBER $(Build.BuildNumber)
        -AZURE_MSI_CLIENT_ID ${{parameters.AZURE_MSI_CLIENT_ID}}

  - task: AzureAppServiceManage@0
    displayName: 'Restart web app service'
    inputs:
      azureSubscription: '${{parameters.azureSubscription}}'
      Action: 'Restart Azure App Service'
      WebAppName: '${{parameters.WEB_APP_NAME}}'
