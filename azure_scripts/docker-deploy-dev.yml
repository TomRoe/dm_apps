pool: dmapps

trigger:
  - none

# pipeline vars:
####################################
# AAD_APP_SECRET (secret)          #
# DB_PASSWORD_WEB (secret)         #
# DB_PASSWORD_PIPELINE (secret)    #
# SECRET_KEY (secret)              #
# SENDGRID_API_KEY (secret)        #
# GITHUB_API_KEY (secret)          #
# ENVIRONMENT_NAME                 #
####################################

steps:
  - script: |
      # these are used in the pipeline and will be written temporarily to the linux env
      AZURE_MSI_CLIENT_ID=$( jq .AZURE_MSI_CLIENT_ID.$(ENVIRONMENT_NAME) ./azure_scripts/public_environmental_vars.json)
      AZURE_STORAGE_ACCOUNT_NAME=$( jq .AZURE_STORAGE_ACCOUNT_NAME.$(ENVIRONMENT_NAME) ./azure_scripts/public_environmental_vars.json)
      DB_HOST=$( jq .DB_HOST.$(ENVIRONMENT_NAME) ./azure_scripts/public_environmental_vars.json)
      DB_MODE=$( jq .DB_MODE.$(ENVIRONMENT_NAME) ./azure_scripts/public_environmental_vars.json)
      DB_NAME=$( jq .DB_NAME.$(ENVIRONMENT_NAME) ./azure_scripts/public_environmental_vars.json)
      DB_USER_PIPELINE=$( jq .DB_USER_PIPELINE.$(ENVIRONMENT_NAME) ./azure_scripts/public_environmental_vars.json)
      DOCKER_NAMESPACE=$( jq .DOCKER_NAMESPACE ./azure_scripts/public_environmental_vars.json)
      DOCKER_REPOSITORY=$( jq .DOCKER_REPOSITORY ./azure_scripts/public_environmental_vars.json)
      DOCKER_IMAGE_TAG=$( jq .DOCKER_IMAGE_TAG.$(ENVIRONMENT_NAME) ./azure_scripts/public_environmental_vars.json)
      WEB_APP_NAME=$( jq .WEB_APP_NAME.$(ENVIRONMENT_NAME) ./azure_scripts/public_environmental_vars.json)

      # these have to be written into the web app confirguration and they are being pulled from the devops pipeline variables
      AAD_APP_SECRET="$(AAD_APP_SECRET)"
      DB_PASSWORD_PIPELINE="$(DB_PASSWORD_PIPELINE)"
      DB_PASSWORD_WEB="$(DB_PASSWORD_WEB)"
      SECRET_KEY="$(SECRET_KEY)"
      SENDGRID_API_KEY="$(SENDGRID_API_KEY)"
      GITHUB_API_KEY="$(GITHUB_API_KEY)"
      ENVIRONMENT_NAME="$(ENVIRONMENT_NAME)"
      echo $AZURE_MSI_CLIENT_ID
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    displayName: 'Variable Declaration'


  - script: |
      echo $AZURE_MSI_CLIENT_ID

      az login --identity -u $AZURE_MSI_CLIENT_ID
      az account set --subscription="$AZURE_SUBSCRIPTION"
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    displayName: 'AZ CLI Login'

  - script: |
      python3.8 -m pip install --upgrade pip setuptools wheel
      sudo apt-get install libmysqlclient-dev
      python3.8 -m pip install -r requirements.txt
      python3.8 -m pip uninstall -y django-easy-pdf
      python3.8 -m pip install git+https://github.com/pawanvirsingh/django-easy-pdf.git#egg=django-easy-pdf
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    displayName: 'Install Dependencies'

  - script: |
      # run migrations and collect static files
      python3.8 manage.py migrate
      python3.8 manage.py collectstatic --no-input
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    displayName: 'Run Migrations and Staticfiles'

  - script: |
      # these are used in the pipeline and will be written temporarily to the linux env
       unset AZURE_MSI_CLIENT_ID
       unset AZURE_STORAGE_ACCOUNT_NAME
       unset DB_HOST
       unset DB_MODE
       unset DB_NAME
       unset DB_USER_PIPELINE
       unset DOCKER_NAMESPACE
       unset DOCKER_REPOSITORY
       unset DOCKER_IMAGE_TAG
       unset WEB_APP_NAME
       unset DB_PASSWORD_PIPELINE
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    displayName: 'Unset Variables'


#  - task: AzureRmWebAppDeployment@4
#    displayName: 'Deploy Docker Image'
#    inputs:
#      ConnectedServiceName: msi.dmapps-dev
#      appType: webAppContainer
#      WebAppName: $(WEB_APP_NAME.dev)
#      DockerNamespace: $(DockerNamespace.dev)
#      DockerRepository: $(DockerRepository.dev)
#      DockerImageTag: $(DockerImageTag.dev)
#      StartupCommand: init.sh
#      AppSettings: >-
#        -WEBSITES_PORT 8000
#        -AAD_APP_ID $(AAD_APP_ID.dev)
#        -AAD_APP_SECRET $(AAD_APP_SECRET)
#        -AAD_REDIRECT $(AAD_REDIRECT.dev)
#        -AZURE_STORAGE_ACCOUNT_NAME $(AZURE_STORAGE_ACCOUNT_NAME.dev)
#        -SECRET_KEY $(SECRET_KEY)
#        -ALLOWED_HOST_TO_ADD $(WEB_APP_NAME.dev).azurewebsites.net
#        -SITE_FROM_EMAIL "DoNotReply@Sci-Zone.dfo-mpo.gc.ca"
#        -SHOW_TICKETING_APP $(SHOW_TICKETING_APP.dev)
#        -DEPLOYMENT_STAGE $(DEPLOYMENT_STAGE.dev)
#        -DB_HOST $(DB_HOST.dev)
#        -DB_MODE $(DB_MODE.dev)
#        -DB_NAME $(DB_NAME.dev)
#        -DB_USER $(DB_USER_WEB.dev)
#        -DB_PASSWORD $(DB_PASSWORD_WEB)
#        -DB_PORT 3306
#        -DEBUG $(DEBUG.dev)
#        -AZURE_INSTRUMENTATION_KEY $(AZURE_INSTRUMENTATION_KEY.dev)
#        -USE_AZURE_APPLICATION_INSIGHT $(USE_AZURE_APPLICATION_INSIGHT.dev)
#        -SENDGRID_API_KEY $(SENDGRID_API_KEY)
#        -GITHUB_API_KEY $(GITHUB_API_KEY)
#        -DEVOPS_DEPLOYMENT_NUMBER $(Build.BuildNumber)
#        -AZURE_MSI_CLIENT_ID $(AZURE_MSI_CLIENT_ID.dev)


