# Generated by Django 3.2 on 2021-04-12 16:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Certainty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(blank=True, choices=[(1, 'Unsure'), (2, 'Probable'), (3, 'Certain')], null=True, verbose_name='code')),
                ('english_certainty_description', models.CharField(blank=True, max_length=250, null=True, verbose_name='description')),
                ('french_certainty_description', models.CharField(blank=True, max_length=250, null=True, verbose_name='description')),
            ],
        ),
        migrations.CreateModel(
            name='IndividualIdentification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_number', models.CharField(max_length=255, verbose_name='neaq catalog #')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('sex', models.IntegerField(blank=True, choices=[(1, 'Unknown'), (2, 'Female'), (3, 'Male')], null=True, verbose_name='sex')),
            ],
            options={
                'ordering': ['id_number'],
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='English name')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='French name')),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('mode', models.IntegerField(choices=[(1, 'Optical'), (2, 'Acoustic')], verbose_name='mode')),
                ('type', models.IntegerField(choices=[(1, 'Digital'), (2, 'Analog')], verbose_name='mode type')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MetadataField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Name')),
                ('nom', models.CharField(blank=True, max_length=250, null=True, verbose_name='Nom')),
                ('description_eng', models.CharField(blank=True, max_length=255, null=True, verbose_name='English description')),
                ('description_fra', models.CharField(blank=True, max_length=255, null=True, verbose_name='French description')),
                ('data_type', models.IntegerField(choices=[(1, 'integer/categorical'), (2, 'float'), (3, 'string')], verbose_name='data type')),
            ],
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(blank=True, null=True, verbose_name='date and time')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='longitude')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='latitude')),
                ('opportunistic', models.BooleanField(default=False, verbose_name='opportunistic?')),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='observations', to='vault.instrument', verbose_name='instrument')),
            ],
        ),
        migrations.CreateModel(
            name='ObservationPlatform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation_platform_type', models.IntegerField(choices=[(1, 'Plane'), (2, 'Boat'), (3, 'Drone'), (4, 'Underwater Glider'), (5, 'Land'), (6, 'Mooring'), (7, 'Space'), (8, 'Remotely Piloted Aircraft Systems (RPAS)')], verbose_name='Type of observation platform')),
                ('make_model', models.CharField(blank=True, max_length=250, null=True, verbose_name='Make and model')),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Call name')),
                ('longname', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Long name')),
            ],
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='English name')),
                ('abbrev_name', models.CharField(max_length=255, verbose_name='English abbreviated name')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='French name')),
                ('abbrev_nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='French abbreviated name')),
            ],
        ),
        migrations.CreateModel(
            name='OriginalMediafile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.CharField(blank=True, max_length=1000, null=True)),
                ('filename', models.CharField(blank=True, max_length=250, null=True, verbose_name='filename')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Last name')),
                ('email', models.CharField(blank=True, max_length=250, null=True, verbose_name='Email address')),
                ('phone', models.CharField(blank=True, max_length=250, null=True, verbose_name='Phone number')),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='people', to='vault.organisation', verbose_name='Organisation')),
            ],
        ),
        migrations.CreateModel(
            name='Purpose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.IntegerField(blank=True, choices=[(1, 'Broadscale Marine Mammal Survey'), (2, 'Science Multi-Species Survey'), (3, 'Fisheries Surveillance'), (4, 'Fisheries Management Support'), (5, 'Shipping Lane Surveillance'), (6, 'Whale Survey'), (7, 'Routine Patrol')], null=True, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.IntegerField(blank=True, choices=[(1, 'St. Lawrence Estuary'), (2, 'Northern GSL'), (3, 'Southern GSL'), (4, 'Cabot Strait'), (5, 'Western NFLD'), (6, 'Northern NFLD'), (7, 'Eastern NFLD'), (8, 'Southern NFLD'), (9, 'Eastern Scotian Shelf'), (10, 'Scotian Shelf'), (11, 'Western Scotian Shelf'), (12, 'Bay of Fundy')], null=True, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.IntegerField(choices=[(1, 'Data Manager'), (2, 'Data Entry'), (3, 'Marine Mammal Observer (MMO)'), (4, 'Verification')], verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=10, null=True, unique=True, verbose_name='Internal code')),
                ('english_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='English name')),
                ('french_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='French name')),
                ('latin_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Scientific name')),
                ('vor_code', models.CharField(blank=True, max_length=250, null=True, verbose_name='VOR code')),
                ('quebec_code', models.CharField(blank=True, max_length=250, null=True, verbose_name='Quebec code')),
                ('maritimes_code', models.CharField(blank=True, max_length=250, null=True, verbose_name='Maritimes code')),
                ('aphia_id', models.IntegerField(blank=True, null=True, verbose_name='ID in World Registry of Marine Species')),
            ],
        ),
        migrations.CreateModel(
            name='ProcessedMediafile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.CharField(blank=True, max_length=1000, null=True)),
                ('filename', models.CharField(blank=True, max_length=250, null=True, verbose_name='filename')),
                ('verified', models.BooleanField(default=False, verbose_name='verified')),
                ('date_analysed', models.DateTimeField()),
                ('date_created', models.DateTimeField()),
                ('analyst', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vault.person')),
                ('original_mediafile', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='processed_mediafiles', to='vault.originalmediafile', verbose_name='original mediafile')),
                ('species', models.ManyToManyField(blank=True, to='vault.Species', verbose_name='species')),
            ],
        ),
        migrations.AddField(
            model_name='person',
            name='roles',
            field=models.ManyToManyField(to='vault.Role', verbose_name='Roles'),
        ),
        migrations.CreateModel(
            name='Outing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='start date and time')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='end date and time')),
                ('identifier_string', models.CharField(blank=True, max_length=250, null=True, verbose_name='identifier string')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('verified_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='outings', to=settings.AUTH_USER_MODEL)),
                ('observation_platform', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='outings', to='vault.observationplatform', verbose_name='observation platform')),
                ('purpose', models.ManyToManyField(blank=True, related_name='outings', to='vault.Purpose', verbose_name='purpose')),
                ('region', models.ManyToManyField(blank=True, related_name='outings', to='vault.Region', verbose_name='region')),
                ('verified_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OriginalMediafileMetadatum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=1000)),
                ('metadata_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='original_mediafile_metadata', to='vault.metadatafield')),
                ('original_mediafile', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='original_mediafile_metadata', to='vault.originalmediafile', verbose_name='original media file')),
            ],
        ),
        migrations.AddField(
            model_name='originalmediafile',
            name='metadata',
            field=models.ManyToManyField(through='vault.OriginalMediafileMetadatum', to='vault.MetadataField'),
        ),
        migrations.AddField(
            model_name='originalmediafile',
            name='observation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='original_mediafiles', to='vault.observation', verbose_name='observation'),
        ),
        migrations.CreateModel(
            name='ObservationSighting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, null=True, verbose_name='# of individuals')),
                ('health_status', models.IntegerField(blank=True, choices=[(1, 'Unknown'), (2, 'Free Swimming'), (3, 'Entangled'), (4, 'Injured'), (5, 'Dead')], null=True, verbose_name='status')),
                ('calf', models.BooleanField(default=False, verbose_name='mother/calf pair')),
                ('verified', models.BooleanField(default=False, verbose_name='verified')),
                ('certainty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='observation_sightings', to='vault.certainty', verbose_name='certainty')),
                ('known_individual', models.ManyToManyField(blank=True, related_name='observation_sightings', to='vault.IndividualIdentification', verbose_name='known individual')),
                ('observation', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='observation_sightings', to='vault.observation', verbose_name='observation')),
                ('species', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='observation_sightings', to='vault.species', verbose_name='species')),
            ],
        ),
        migrations.AddField(
            model_name='observationplatform',
            name='authority',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='platform_authorities', to='vault.organisation', verbose_name='authority'),
        ),
        migrations.AddField(
            model_name='observationplatform',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='platform_owners', to='vault.organisation', verbose_name='owner'),
        ),
        migrations.CreateModel(
            name='ObservationMetadatum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=1000)),
                ('metadata_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observation_metadata', to='vault.metadatafield', verbose_name='Metadata field')),
                ('observation', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='observation_metadata', to='vault.observation', verbose_name='Observation')),
            ],
        ),
        migrations.AddField(
            model_name='observation',
            name='metadata',
            field=models.ManyToManyField(blank=True, through='vault.ObservationMetadatum', to='vault.MetadataField'),
        ),
        migrations.AddField(
            model_name='observation',
            name='observer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='observations', to='vault.person', verbose_name='observer'),
        ),
        migrations.AddField(
            model_name='observation',
            name='outing',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='observations', to='vault.outing', verbose_name='outing'),
        ),
        migrations.CreateModel(
            name='MediafileSighting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sex', models.IntegerField(blank=True, choices=[(1, 'Unknown'), (2, 'Female'), (3, 'Male')], null=True, verbose_name='sex')),
                ('life_stage', models.IntegerField(blank=True, choices=[(1, 'Unknown'), (2, 'Calf'), (3, 'Mother Calf Pair'), (4, 'Juvenile'), (5, 'Adult')], null=True, verbose_name='life_stage')),
                ('health_status', models.IntegerField(blank=True, choices=[(1, 'Unknown'), (2, 'Healthy'), (3, 'All Points Bulletin (APB)'), (4, 'New Injury'), (5, 'Entangled'), (6, 'Distressed'), (7, 'Dead')], null=True, verbose_name='health status')),
                ('verified', models.BooleanField(default=False, verbose_name='verified')),
                ('certainty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='mediafile_sightings', to='vault.certainty')),
                ('known_individual', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='mediafile_sightings', to='vault.individualidentification', verbose_name='known individual')),
                ('original_mediafile', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='mediafile_sightings', to='vault.originalmediafile', verbose_name='original media file')),
                ('species', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='mediafile_sightings', to='vault.species')),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentMetadatum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=1000)),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='instrument_metadata', to='vault.instrument', verbose_name='instrument')),
                ('metadata_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instrument_metadata', to='vault.metadatafield')),
            ],
        ),
        migrations.AddField(
            model_name='instrument',
            name='instrument_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='instruments', to='vault.instrumenttype', verbose_name='Type of instrument'),
        ),
        migrations.CreateModel(
            name='FieldName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='name')),
                ('used_for', models.ManyToManyField(blank=True, to='vault.Instrument', verbose_name='used for')),
            ],
        ),
        migrations.CreateModel(
            name='MetadataFieldCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3)),
                ('description_eng', models.CharField(blank=True, max_length=255, null=True, verbose_name='English description')),
                ('description_fra', models.CharField(blank=True, max_length=255, null=True, verbose_name='French description')),
                ('metadata_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='vault.metadatafield')),
            ],
            options={
                'ordering': ['code'],
                'unique_together': {('metadata_field', 'code')},
            },
        ),
    ]
