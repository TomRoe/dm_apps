# Generated by Django 2.2.2 on 2020-01-21 17:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import travel.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('shared_models', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('nom', models.CharField(blank=True, max_length=255, null=True)),
                ('is_adm_approval_required', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='does attendance to this require ADM approval?')),
                ('location', models.CharField(blank=True, max_length=1000, null=True, verbose_name='location (city, province, country)')),
                ('has_event_template', models.NullBooleanField(default=False, verbose_name='Is there an event template being completed for this conference or meeting?')),
                ('number', models.IntegerField(blank=True, null=True, verbose_name='event number')),
                ('start_date', models.DateTimeField(verbose_name='start date of event')),
                ('end_date', models.DateTimeField(verbose_name='end date of event')),
                ('meeting_url', models.URLField(blank=True, null=True, verbose_name='meeting URL')),
                ('abstract_deadline', models.DateTimeField(blank=True, null=True, verbose_name='abstract submission deadline')),
                ('registration_deadline', models.DateTimeField(blank=True, null=True, verbose_name='registration deadline')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='general notes')),
                ('fiscal_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='conferences', to='shared_models.FiscalYear', verbose_name='fiscal year')),
                ('lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='meeting_leads', to='shared_models.Region', verbose_name='Which region is taking the lead?')),
            ],
            options={
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='HelpText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=255)),
                ('eng_text', models.TextField(verbose_name='English text')),
                ('fra_text', models.TextField(blank=True, null=True, verbose_name='French text')),
            ],
            options={
                'ordering': ['field_name'],
            },
        ),
        migrations.CreateModel(
            name='Purpose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='name (eng)')),
                ('nom', models.CharField(blank=True, max_length=100, null=True, verbose_name='name (fre)')),
                ('description_eng', models.CharField(blank=True, max_length=1000, null=True, verbose_name='description (eng)')),
                ('description_fre', models.CharField(blank=True, max_length=1000, null=True, verbose_name='description (fre)')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Reason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='name (eng)')),
                ('nom', models.CharField(blank=True, max_length=100, null=True, verbose_name='name (fre)')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReviewerRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='name (eng)')),
                ('nom', models.CharField(blank=True, max_length=100, null=True, verbose_name='name (fre)')),
                ('order', models.IntegerField()),
            ],
            options={
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='name (eng)')),
                ('nom', models.CharField(blank=True, max_length=100, null=True, verbose_name='name (fre)')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('used_for', models.IntegerField(choices=[(1, 'Reviewer status'), (2, 'Trip status')])),
                ('name', models.CharField(max_length=255)),
                ('nom', models.CharField(blank=True, max_length=255, null=True)),
                ('order', models.IntegerField(blank=True, null=True)),
                ('color', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'ordering': ['used_for', 'order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_group_trip', models.BooleanField(default=False, verbose_name='Is this a group trip (i.e., is this a request for multiple individuals)?')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='last name')),
                ('address', models.CharField(blank=True, max_length=1000, null=True, verbose_name='address')),
                ('phone', models.CharField(blank=True, max_length=1000, null=True, verbose_name='phone')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email')),
                ('is_public_servant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, verbose_name='Is the traveller a public servant?')),
                ('is_research_scientist', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='Is the traveller a research scientist (RES)?')),
                ('company_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='company name')),
                ('departure_location', models.CharField(blank=True, max_length=1000, null=True, verbose_name='departure location (city, province, country)')),
                ('destination', models.CharField(blank=True, max_length=1000, null=True, verbose_name='destination location (city, province, country)')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='start date of travel')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='end date of travel')),
                ('role_of_participant', models.TextField(blank=True, null=True, verbose_name='role description')),
                ('objective_of_event', models.TextField(blank=True, null=True, verbose_name='objective of the trip')),
                ('benefit_to_dfo', models.TextField(blank=True, null=True, verbose_name='benefit to DFO')),
                ('multiple_conferences_rationale', models.TextField(blank=True, null=True, verbose_name='rationale for individual attending multiple conferences')),
                ('multiple_attendee_rationale', models.TextField(blank=True, null=True, verbose_name='rationale for multiple travelers')),
                ('late_justification', models.TextField(blank=True, null=True, verbose_name='Justification for late submissions')),
                ('funding_source', models.TextField(blank=True, null=True, verbose_name='funding source')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='optional notes')),
                ('air', models.FloatField(blank=True, null=True, verbose_name='air fare')),
                ('rail', models.FloatField(blank=True, null=True, verbose_name='rail')),
                ('rental_motor_vehicle', models.FloatField(blank=True, null=True, verbose_name='rental motor vehicles')),
                ('personal_motor_vehicle', models.FloatField(blank=True, null=True, verbose_name='personal motor vehicles')),
                ('taxi', models.FloatField(blank=True, null=True, verbose_name='taxi')),
                ('other_transport', models.FloatField(blank=True, null=True, verbose_name='other transport')),
                ('accommodations', models.FloatField(blank=True, null=True, verbose_name='accommodation')),
                ('no_breakfasts', models.IntegerField(blank=True, null=True, verbose_name='number of breakfasts')),
                ('breakfasts_rate', models.FloatField(blank=True, default=20.35, null=True, verbose_name='breakfast rate (CAD/day)')),
                ('breakfasts', models.FloatField(blank=True, null=True, verbose_name='breakfasts')),
                ('no_lunches', models.IntegerField(blank=True, null=True, verbose_name='number of lunches')),
                ('lunches_rate', models.FloatField(blank=True, default=20.6, null=True, verbose_name='lunch rate (CAD/day)')),
                ('lunches', models.FloatField(blank=True, null=True, verbose_name='lunches')),
                ('no_suppers', models.IntegerField(blank=True, null=True, verbose_name='number of suppers')),
                ('suppers_rate', models.FloatField(blank=True, default=50.55, null=True, verbose_name='supper rate (CAD/day)')),
                ('suppers', models.FloatField(blank=True, null=True, verbose_name='suppers')),
                ('no_incidentals', models.IntegerField(blank=True, null=True, verbose_name='number of incidentals')),
                ('incidentals_rate', models.FloatField(blank=True, default=17.3, null=True, verbose_name='incidental rate (CAD/day)')),
                ('incidentals', models.FloatField(blank=True, null=True, verbose_name='incidentals')),
                ('registration', models.FloatField(blank=True, null=True, verbose_name='registration')),
                ('other', models.FloatField(blank=True, null=True, verbose_name='other')),
                ('total_cost', models.FloatField(blank=True, null=True, verbose_name='total trip cost (DFO)')),
                ('non_dfo_costs', models.FloatField(blank=True, null=True, verbose_name='Estimated non-DFO costs (CAD)')),
                ('non_dfo_org', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Full name(s) of organization paying non-DFO costs')),
                ('submitted', models.DateTimeField(blank=True, null=True, verbose_name='date sumbitted')),
                ('bta_attendees', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Other attendees covered under BTA')),
                ('conference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='trips', to='travel.Conference', verbose_name='conference / meeting')),
                ('fiscal_year', models.ForeignKey(blank=True, default=2020, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='trips', to='shared_models.FiscalYear', verbose_name='fiscal year')),
                ('parent_trip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children_trips', to='travel.Trip')),
                ('purpose', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='travel.Purpose', verbose_name='purpose of travel')),
                ('reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='travel.Reason', verbose_name='reason for travel')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='trips', to='shared_models.Region', verbose_name='DFO region')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='travel.Role', verbose_name='role of traveller')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.Section', verbose_name='DFO section')),
                ('status', models.ForeignKey(default=8, limit_choices_to={'used_for': 2}, on_delete=django.db.models.deletion.DO_NOTHING, related_name='trips', to='travel.Status', verbose_name='trip status')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_trips', to=settings.AUTH_USER_MODEL, verbose_name='DM Apps user')),
            ],
            options={
                'ordering': ['-start_date', 'last_name'],
                'unique_together': {('user', 'parent_trip')},
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='caption')),
                ('file', models.FileField(null=True, upload_to=travel.models.file_directory_path, verbose_name='file attachment')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='travel.Trip')),
            ],
            options={
                'ordering': ['trip', 'date_created'],
            },
        ),
        migrations.CreateModel(
            name='Reviewer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(null=True, verbose_name='process order')),
                ('status_date', models.DateTimeField(blank=True, null=True, verbose_name='status date')),
                ('comments', models.TextField(null=True, verbose_name='Comments')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='travel.ReviewerRole', verbose_name='role')),
                ('status', models.ForeignKey(default=4, limit_choices_to={'used_for': 1}, on_delete=django.db.models.deletion.DO_NOTHING, to='travel.Status', verbose_name='review status')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviewers', to='travel.Trip')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='reviewers', to=settings.AUTH_USER_MODEL, verbose_name='DM Apps user')),
            ],
            options={
                'ordering': ['trip', 'order'],
                'unique_together': {('trip', 'user', 'role')},
            },
        ),
    ]
