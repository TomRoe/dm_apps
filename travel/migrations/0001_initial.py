# Generated by Django 3.1.2 on 2021-02-24 03:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import travel.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('shared_models', '0005_auto_20210217_1303'),
    ]

    operations = [
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='trip title (English)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='trip title (French)')),
                ('is_adm_approval_required', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='does attendance to this require ADM approval?')),
                ('location', models.CharField(max_length=1000, null=True, verbose_name='location (city, province, country)')),
                ('has_event_template', models.IntegerField(blank=True, choices=[(None, '---------'), (1, 'Yes'), (0, 'No')], default=0, null=True, verbose_name='Is there an event template being completed for this conference or meeting?')),
                ('number', models.IntegerField(blank=True, editable=False, null=True, verbose_name='event number')),
                ('start_date', models.DateTimeField(verbose_name='start date of event')),
                ('end_date', models.DateTimeField(verbose_name='end date of event')),
                ('meeting_url', models.URLField(blank=True, null=True, verbose_name='meeting URL')),
                ('abstract_deadline', models.DateTimeField(blank=True, null=True, verbose_name='abstract submission deadline')),
                ('registration_deadline', models.DateTimeField(blank=True, null=True, verbose_name='registration deadline')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='general notes')),
                ('is_verified', models.BooleanField(default=False, verbose_name='verified?')),
                ('cost_warning_sent', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[(30, 'Unverified'), (31, 'Under review'), (32, 'Reviewed'), (41, 'Verified'), (43, 'Cancelled')], default=30, editable=False, verbose_name='trip status')),
                ('admin_notes', models.TextField(blank=True, null=True, verbose_name='Administrative notes')),
                ('review_start_date', models.DateTimeField(blank=True, null=True, verbose_name='start date of the ADM review')),
                ('adm_review_deadline', models.DateTimeField(blank=True, null=True, verbose_name='ADM Office review deadline')),
                ('date_eligible_for_adm_review', models.DateTimeField(blank=True, null=True, verbose_name='Date when eligible for ADM Office review')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='trip_created_by', to=settings.AUTH_USER_MODEL)),
                ('fiscal_year', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='trips', to='shared_models.fiscalyear', verbose_name='fiscal year')),
                ('lead', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='meeting_leads', to='shared_models.region', verbose_name='Which region is the lead on this trip?')),
            ],
            options={
                'verbose_name': 'trip',
                'verbose_name_plural': 'trips',
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='CostCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('order', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_en', models.TextField(blank=True, null=True, verbose_name='question (en)')),
                ('question_fr', models.TextField(blank=True, null=True, verbose_name='question (fr)')),
                ('answer_en', models.TextField(blank=True, null=True, verbose_name='answer (en)')),
                ('answer_fr', models.TextField(blank=True, null=True, verbose_name='answer (fr)')),
            ],
        ),
        migrations.CreateModel(
            name='HelpText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=255)),
                ('eng_text', models.TextField(verbose_name='English text')),
                ('fra_text', models.TextField(blank=True, null=True, verbose_name='French text')),
            ],
            options={
                'ordering': ['field_name'],
            },
        ),
        migrations.CreateModel(
            name='NJCRates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('amount', models.FloatField()),
                ('last_modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ProcessStep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
                ('stage', models.IntegerField(blank=True, choices=[(0, 'Information Section'), (1, 'Travel Request Process Outline'), (2, 'Review Process Outline')], null=True)),
                ('order', models.IntegerField(blank=True, null=True)),
                ('is_visible', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['stage', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Reason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReferenceMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('order', models.IntegerField(blank=True, null=True)),
                ('url_en', models.URLField(blank=True, null=True, verbose_name='url (English)')),
                ('url_fr', models.URLField(blank=True, null=True, verbose_name='url (French)')),
                ('file_en', models.FileField(blank=True, null=True, upload_to=travel.models.ref_mat_directory_path, verbose_name='file attachment (English)')),
                ('file_fr', models.FileField(blank=True, null=True, upload_to=travel.models.ref_mat_directory_path, verbose_name='file attachment (French)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ReviewerRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('order', models.IntegerField()),
            ],
            options={
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('name', models.CharField(max_length=255)),
                ('used_for', models.IntegerField(choices=[(1, 'Request Reviewer status'), (2, 'Trip Request status'), (3, 'Trip Reviewer status'), (4, 'Trip status')])),
                ('order', models.IntegerField(blank=True, null=True)),
                ('color', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'ordering': ['used_for', 'order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TripCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('days_when_eligible_for_review', models.IntegerField(verbose_name='Number of days before earliest date that is eligible for review')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TripRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_public_servant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, verbose_name='Is the traveller a public servant?')),
                ('is_research_scientist', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='Is the traveller a research scientist (RES)?')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='last name')),
                ('address', models.CharField(blank=True, max_length=1000, null=True, verbose_name='address')),
                ('phone', models.CharField(blank=True, max_length=1000, null=True, verbose_name='phone (xxx-xxx-xxxx)')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email')),
                ('company_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='company name')),
                ('is_group_request', models.BooleanField(default=False, verbose_name='Is this a group request (i.e., a request for multiple individuals)?')),
                ('departure_location', models.CharField(blank=True, max_length=1000, null=True, verbose_name='departure location (city, province, country)')),
                ('destination', models.CharField(blank=True, max_length=1000, null=True, verbose_name='destination location (city, province, country)')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='start date of travel')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='end date of travel')),
                ('role_of_participant', models.TextField(blank=True, null=True, verbose_name='role description')),
                ('learning_plan', models.BooleanField(default=False, verbose_name='is this request included on your learning plan?')),
                ('objective_of_event', models.TextField(blank=True, null=True, verbose_name='what is the objective of this meeting or conference?')),
                ('benefit_to_dfo', models.TextField(blank=True, null=True, verbose_name='what are the benefits to DFO?')),
                ('late_justification', models.TextField(blank=True, null=True, verbose_name='justification for late submissions')),
                ('funding_source', models.TextField(blank=True, null=True, verbose_name='what is the funding source?')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes (optional)')),
                ('non_dfo_costs', models.FloatField(blank=True, null=True, verbose_name='amount of non-DFO funding (CAD)')),
                ('non_dfo_org', models.CharField(blank=True, max_length=1000, null=True, verbose_name='give the full name(s) of the of the organization(s) providing non-DFO funding')),
                ('submitted', models.DateTimeField(blank=True, null=True, verbose_name='date submitted')),
                ('original_submission_date', models.DateTimeField(blank=True, null=True, verbose_name='original submission date')),
                ('status', models.IntegerField(choices=[(8, 'Draft'), (10, 'Denied'), (11, 'Approved'), (12, 'Pending Recommendation'), (14, 'Pending ADM Approval'), (15, 'Pending RDG Approval'), (16, 'Changes Requested'), (17, 'Pending Review'), (22, 'Cancelled')], default=8, verbose_name='trip request status')),
                ('admin_notes', models.TextField(blank=True, null=True, verbose_name='Administrative notes')),
                ('exclude_from_travel_plan', models.BooleanField(default=False, verbose_name='Exclude this traveller from the travel plan?')),
                ('bta_attendees', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='other attendees covered under BTA')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='trip_requests_created_by', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('fiscal_year', models.ForeignKey(blank=True, default=2021, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='trip_requests', to='shared_models.fiscalyear', verbose_name='fiscal year')),
                ('parent_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children_requests', to='travel.triprequest')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='trip_requests', to='shared_models.region', verbose_name='Traveller belongs to which DFO region?')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='travel.role', verbose_name='role of traveller')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='trip_requests', to='shared_models.section', verbose_name='under which section is this request being made?')),
                ('trip', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='trip_requests', to='travel.conference', verbose_name='trip')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_trip_requests', to=settings.AUTH_USER_MODEL, verbose_name='DM Apps user')),
            ],
            options={
                'verbose_name': 'trip request',
                'ordering': ['-start_date', 'last_name'],
                'unique_together': {('user', 'trip'), ('user', 'parent_request')},
            },
        ),
        migrations.CreateModel(
            name='TripSubcategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
                ('name', models.CharField(max_length=255, verbose_name='name (en)')),
                ('trip_category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='subcategories', to='travel.tripcategory')),
            ],
            options={
                'ordering': ['trip_category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TripRequest1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank=True, editable=False, null=True, verbose_name='unique identifier')),
                ('objective_of_event', models.TextField(blank=True, null=True, verbose_name='what is the objective of this meeting or conference?')),
                ('benefit_to_dfo', models.TextField(blank=True, null=True, verbose_name='what are the benefits to DFO?')),
                ('late_justification', models.TextField(blank=True, null=True, verbose_name='justification for late submissions')),
                ('funding_source', models.TextField(blank=True, null=True, verbose_name='what is the DFO funding source?')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes (optional)')),
                ('admin_notes', models.TextField(blank=True, null=True, verbose_name='Administrative notes')),
                ('submitted', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='date submitted')),
                ('original_submission_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='original submission date')),
                ('status', models.IntegerField(choices=[(8, 'Draft'), (10, 'Denied'), (11, 'Approved'), (12, 'Pending Recommendation'), (14, 'Pending ADM Approval'), (15, 'Pending RDG Approval'), (16, 'Changes Requested'), (17, 'Pending Review'), (22, 'Cancelled')], default=8, editable=False, verbose_name='trip request status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bta_attendees', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='other attendees covered under BTA')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='travel_requests_created_by', to=settings.AUTH_USER_MODEL)),
                ('fiscal_year', models.ForeignKey(blank=True, default=2021, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='requests', to='shared_models.fiscalyear', verbose_name='fiscal year')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='requests', to='shared_models.section', verbose_name='under which section is this request being made?')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='requests', to='travel.conference', verbose_name='trip')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='travel_requests_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'trip request',
                'ordering': ['-trip__start_date'],
            },
        ),
        migrations.CreateModel(
            name='Traveller',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_public_servant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, verbose_name='Is the traveller a public servant?')),
                ('is_research_scientist', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='Is the traveller a research scientist (RES)?')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='last name')),
                ('address', models.CharField(blank=True, max_length=1000, null=True, verbose_name='address')),
                ('phone', models.CharField(blank=True, max_length=1000, null=True, verbose_name='phone (xxx-xxx-xxxx)')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email')),
                ('company_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='company name')),
                ('departure_location', models.CharField(blank=True, max_length=1000, null=True, verbose_name='departure location (city, province, country)')),
                ('start_date', models.DateTimeField(verbose_name='start date of travel')),
                ('end_date', models.DateTimeField(verbose_name='end date of travel')),
                ('role_of_participant', models.TextField(blank=True, null=True, verbose_name='role description')),
                ('learning_plan', models.BooleanField(default=False, verbose_name='is this request included on your learning plan?')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes (optional)')),
                ('non_dfo_costs', models.FloatField(blank=True, null=True, verbose_name='amount of non-DFO funding (CAD)')),
                ('non_dfo_org', models.CharField(blank=True, max_length=1000, null=True, verbose_name='give the full name(s) of the of the organization(s) providing non-DFO funding')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='travellers', to='travel.triprequest1')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='travel.role', verbose_name='role of traveller')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='travellers', to=settings.AUTH_USER_MODEL, verbose_name='DM Apps user')),
            ],
            options={
                'verbose_name': 'trip request',
                'ordering': ['first_name', 'last_name'],
                'unique_together': {('user', 'request')},
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='caption')),
                ('file', models.FileField(null=True, upload_to=travel.models.file_directory_path, verbose_name='attachment')),
                ('date_created', models.DateTimeField(auto_now=True, verbose_name='date created')),
                ('request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='travel.triprequest1')),
                ('trip_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='travel.triprequest')),
            ],
            options={
                'verbose_name': 'file',
                'ordering': ['trip_request', 'date_created'],
            },
        ),
        migrations.CreateModel(
            name='DefaultReviewer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(blank=True, null=True, verbose_name='What order should they be in (only applicable when there is multiple reviewers at the same level)?')),
                ('branches', models.ManyToManyField(blank=True, related_name='travel_default_reviewers', to='shared_models.Branch', verbose_name='To be added in front of which branches')),
                ('divisions', models.ManyToManyField(blank=True, related_name='travel_default_reviewers', to='shared_models.Division', verbose_name='To be added in front of which divisions')),
                ('reviewer_roles', models.ManyToManyField(blank=True, limit_choices_to={'id__in': [3, 4, 5]}, related_name='travel_default_reviewers', to='travel.ReviewerRole', verbose_name='Do they have any special roles?')),
                ('sections', models.ManyToManyField(blank=True, related_name='travel_default_reviewers', to='shared_models.Section', verbose_name='To be added in front of which sections')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='travel_default_reviewers', to=settings.AUTH_USER_MODEL, verbose_name='DM Apps user')),
            ],
            options={
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Cost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('cost_category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='travel.costcategory', verbose_name='category')),
            ],
            options={
                'ordering': ['cost_category', 'name'],
            },
        ),
        migrations.AddField(
            model_name='conference',
            name='trip_subcategory',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='trips', to='travel.tripsubcategory', verbose_name='trip purpose'),
        ),
        migrations.AddField(
            model_name='conference',
            name='updated_by',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='trip_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='conference',
            name='verified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='trips_verified_by', to=settings.AUTH_USER_MODEL, verbose_name='verified by'),
        ),
        migrations.CreateModel(
            name='TripReviewer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(null=True, verbose_name='process order')),
                ('role', models.IntegerField(choices=[(1, 'Reviewer'), (2, 'Recommender'), (3, 'NCR Travel Coordinators'), (4, 'ADM Recommender'), (5, 'ADM'), (6, 'RDG')], verbose_name='role')),
                ('status', models.IntegerField(choices=[(23, 'Draft'), (24, 'Queued'), (25, 'Pending'), (26, 'Complete'), (42, 'Skipped'), (44, 'Cancelled')], default=23, verbose_name='review status')),
                ('status_date', models.DateTimeField(blank=True, null=True, verbose_name='status date')),
                ('comments', models.TextField(null=True, verbose_name='Comments')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviewers', to='travel.conference')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='trip_reviewers_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='trip_reviewers', to=settings.AUTH_USER_MODEL, verbose_name='DM Apps user')),
            ],
            options={
                'verbose_name': 'trip reviewer',
                'ordering': ['trip', 'order'],
                'unique_together': {('trip', 'user', 'role')},
            },
        ),
        migrations.CreateModel(
            name='TripRequestCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate_cad', models.FloatField(blank=True, null=True, verbose_name='daily rate (CAD/day)')),
                ('number_of_days', models.FloatField(blank=True, null=True, verbose_name='number of days')),
                ('amount_cad', models.FloatField(blank=True, default=0, null=True, verbose_name='amount (CAD)')),
                ('cost', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='trip_request_costs', to='travel.cost', verbose_name='cost')),
                ('traveller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='costs', to='travel.traveller', verbose_name='traveller')),
                ('trip_request', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trip_request_costs', to='travel.triprequest', verbose_name='trip request')),
            ],
            options={
                'verbose_name': 'cost',
                'unique_together': {('traveller', 'cost'), ('trip_request', 'cost')},
            },
        ),
        migrations.CreateModel(
            name='Reviewer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(null=True, verbose_name='process order')),
                ('role', models.IntegerField(choices=[(1, 'Reviewer'), (2, 'Recommender'), (3, 'NCR Travel Coordinators'), (4, 'ADM Recommender'), (5, 'ADM'), (6, 'RDG')], verbose_name='role')),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Denied'), (4, 'Draft'), (5, 'Cancelled'), (20, 'Queued'), (21, 'Skipped')], default=4, verbose_name='review status')),
                ('status_date', models.DateTimeField(blank=True, null=True, verbose_name='status date')),
                ('comments', models.TextField(null=True, verbose_name='Comments')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviewers', to='travel.triprequest1')),
                ('trip_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviewers', to='travel.triprequest')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='request_reviewers_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='reviewers', to=settings.AUTH_USER_MODEL, verbose_name='DM Apps user')),
            ],
            options={
                'verbose_name': 'reviewer',
                'ordering': ['trip_request', 'order'],
                'unique_together': {('trip_request', 'user', 'role')},
            },
        ),
    ]
