# Generated by Django 2.1.4 on 2019-01-14 15:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BudgetCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Collaborator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('type', models.IntegerField(choices=[(1, 'Collaborator'), (2, 'Partner')])),
                ('critical', models.BooleanField(default=True, verbose_name='Critical to project delivery')),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('cost_type', models.IntegerField(choices=[(1, 'Salary'), (2, 'O&M')])),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_title', models.TextField(verbose_name='Title (English)')),
                ('division', models.TextField(blank=True, null=True)),
                ('section', models.TextField(blank=True, null=True)),
                ('program', models.TextField(blank=True, null=True)),
                ('project_status', models.TextField(blank=True, null=True)),
                ('approved', models.BooleanField(default=False, verbose_name='Has this project already been approved?')),
                ('time_start', models.DateTimeField(blank=True, null=True, verbose_name='Start Date')),
                ('time_end', models.DateTimeField(blank=True, null=True, verbose_name='End Date')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Project Objective & Description')),
                ('priorities', models.TextField(blank=True, null=True, verbose_name='Project-specific priorities in 2019/2020')),
                ('deliverables', models.TextField(blank=True, null=True, verbose_name='Project Deliverables in 2019 / 2020 (bulleted form)')),
                ('data_collection', models.TextField(blank=True, null=True, verbose_name='What type of data will be collected?')),
                ('data_sharing', models.TextField(blank=True, null=True, verbose_name='Which of these data will be share-worthy and what is the plan to share / disseminate?')),
                ('data_storage', models.TextField(blank=True, null=True, verbose_name='Data Storage / Archiving Plan')),
                ('metadata_url', models.URLField(blank=True, null=True, verbose_name='please provide link to metadata, if available')),
                ('regional_dm', models.NullBooleanField(verbose_name='Does the program require assistance of the branch data manager?')),
                ('regional_dm_needs', models.TextField(blank=True, null=True, verbose_name='If yes, please describe')),
                ('sectional_dm', models.NullBooleanField(verbose_name="Does the program require assistance of the section's data manager?")),
                ('sectional_dm_needs', models.TextField(blank=True, null=True, verbose_name='If yes, please describe')),
                ('vehicle_needs', models.TextField(blank=True, null=True, verbose_name='Describe need for vehicle (type of vehicle, number of weeks, time-frame)')),
                ('it_needs', models.TextField(blank=True, null=True, verbose_name='IT Requirements (software, licenses, hardware)')),
                ('chemical_needs', models.TextField(blank=True, null=True, verbose_name='Please provide details regarding chemical needs and the plan for storage and disposal.')),
                ('ship_needs', models.TextField(blank=True, null=True, verbose_name='Ship (Coast Guard, Charter) Requirements')),
                ('submitted', models.BooleanField(default=False, verbose_name='Submit project for review')),
                ('date_last_modified', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('budget_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='is_section_head_on_projects', to='projects.BudgetCode')),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('project_lead', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='is_lead_on_projects', to=settings.AUTH_USER_MODEL)),
                ('section_head', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='is_section_head_on_projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Person name (leave blank if user is selected)')),
                ('student_program', models.IntegerField(choices=[('FWSEP', 'Salary'), ('COOP', 'O&M')])),
                ('duration_weeks', models.FloatField(default=0)),
                ('cost', models.FloatField()),
                ('employee_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='projects.EmployeeType')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='projects.Level')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='staff_members', to='projects.Project')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.AddField(
            model_name='collaborator',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='collaborators', to='projects.Project'),
        ),
    ]
