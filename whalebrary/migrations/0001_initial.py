# Generated by Django 3.2 on 2021-04-12 17:01

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import whalebrary.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Audit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='last audited on')),
                ('last_audited_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='last audited by')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='english name')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='french name')),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='name')),
                ('nom', models.CharField(blank=True, max_length=250, null=True, verbose_name='nom')),
                ('description_eng', models.CharField(blank=True, max_length=255, null=True, verbose_name='english description')),
                ('description_fra', models.CharField(blank=True, max_length=255, null=True, verbose_name='french description')),
                ('experience', models.CharField(choices=[('None', 'No previous experience'), ('Novice', '1-2 Necropsies'), ('Intermediate', '3-5 Necropsies'), ('Advanced', 'More than 5 Necropsies')], default='None', max_length=255, verbose_name='experience level')),
            ],
        ),
        migrations.CreateModel(
            name='GearType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='english name')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='french name')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='name of item')),
                ('description', models.CharField(blank=True, max_length=250, null=True, verbose_name='description')),
                ('note', models.CharField(blank=True, max_length=250, null=True, verbose_name='note')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='items', to='whalebrary.category', verbose_name='category of equipment')),
                ('gear_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='items', to='whalebrary.geartype', verbose_name='type of equipment')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=250, verbose_name='location')),
                ('bin_id', models.CharField(blank=True, max_length=250, null=True, verbose_name='bin id')),
                ('address', models.CharField(max_length=250, verbose_name='address')),
                ('container', models.BooleanField(default=False, verbose_name='is this item a container with more items inside it?')),
                ('container_space', models.IntegerField(blank=True, null=True, verbose_name='container Space Available (if applicable)')),
            ],
            options={
                'ordering': ['location'],
            },
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='english name')),
                ('abbrev_name', models.CharField(max_length=255, verbose_name='english abbreviated name')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='french name')),
                ('abbrev_nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='french abbreviated name')),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='english name')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='french name')),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='size')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='taille')),
            ],
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('name_latin', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (latin)')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='supplier')),
                ('contact_number', models.CharField(blank=True, max_length=250, null=True, verbose_name='contact number')),
                ('email', models.CharField(blank=True, max_length=250, null=True, verbose_name='email')),
                ('website', models.CharField(blank=True, max_length=250, null=True, verbose_name='website')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='comments/details')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(blank=True, max_length=255, null=True, verbose_name='tag')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('nom', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TransactionCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=255, null=True, verbose_name='tag')),
                ('description', models.CharField(max_length=255, null=True, verbose_name='description')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='quantity')),
                ('comments', models.CharField(blank=True, max_length=250, null=True, verbose_name='comments')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('audits', models.ManyToManyField(blank=True, to='whalebrary.Audit', verbose_name='audits')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='transactions', to='whalebrary.transactioncategory', verbose_name='transaction category')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='transactions', to='whalebrary.item', verbose_name='item')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='transactions', to='whalebrary.location', verbose_name='location stored')),
                ('tags', models.ManyToManyField(blank=True, related_name='transactions', to='whalebrary.Tag', verbose_name='tags')),
            ],
        ),
        migrations.CreateModel(
            name='Personnel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='last name')),
                ('email', models.CharField(blank=True, max_length=250, null=True, verbose_name='email address')),
                ('phone', models.CharField(blank=True, max_length=250, null=True, verbose_name='phone number')),
                ('exp_level', models.ForeignKey(help_text='Novice 1-2 necropsy, Intermediate 3-5, Advanced more than 5', on_delete=django.db.models.deletion.DO_NOTHING, related_name='xp', to='whalebrary.experience', verbose_name='experience level')),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='people', to='whalebrary.organisation', verbose_name='organisation')),
                ('trainings', models.ManyToManyField(blank=True, to='whalebrary.Training', verbose_name='training')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, null=True, verbose_name='quantity')),
                ('cost', models.FloatField(blank=True, null=True, verbose_name='order cost')),
                ('date_ordered', models.DateTimeField(default=django.utils.timezone.now, verbose_name='order date')),
                ('date_received', models.DateTimeField(blank=True, null=True, verbose_name='received date')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='orders', to='whalebrary.item', verbose_name='item')),
                ('transaction', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='orders', to='whalebrary.transaction', verbose_name='transaction')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='items', to='whalebrary.owner', verbose_name='owner of equipment'),
        ),
        migrations.AddField(
            model_name='item',
            name='size',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='items', to='whalebrary.size', verbose_name='size (if applicable)'),
        ),
        migrations.AddField(
            model_name='item',
            name='suppliers',
            field=models.ManyToManyField(blank=True, to='whalebrary.Supplier', verbose_name='suppliers'),
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='incident name')),
                ('species_count', models.CharField(blank=True, max_length=255, null=True, verbose_name='species count')),
                ('submitted', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], null=True, verbose_name='incident report submitted by Gulf?')),
                ('first_report', models.DateTimeField(blank=True, help_text='Format: YYYY-MM-DD HH:mm:ss', null=True, verbose_name='date and time first reported')),
                ('location', models.CharField(blank=True, max_length=255, null=True, verbose_name='location')),
                ('region', models.CharField(blank=True, choices=[('Gulf', 'Gulf'), ('Mar', 'Maritimes'), ('NL', 'Newfoundland'), ('QC', 'Quebec')], max_length=255, null=True, verbose_name='region')),
                ('sex', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('UnK', 'Unknown')], max_length=255, null=True, verbose_name='sex')),
                ('age_group', models.CharField(blank=True, choices=[('J', 'Juvenile'), ('YA', 'Young Adult'), ('A', 'Adult')], max_length=255, null=True, verbose_name='age group')),
                ('incident_type', models.CharField(blank=True, choices=[('E', 'Entangled'), ('DF', 'DEAD - Floating'), ('DB', 'DEAD - Beached'), ('N', 'Necropsy'), ('LS', 'LIVE - Stranded'), ('DS', 'DEAD - Stranded')], max_length=255, null=True, verbose_name='type of Incident')),
                ('gear_presence', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], null=True, verbose_name='gear Presence?')),
                ('gear_desc', models.CharField(blank=True, max_length=255, null=True, verbose_name='gear description')),
                ('exam', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], null=True, verbose_name='examination conducted?')),
                ('necropsy', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], null=True, verbose_name='necropsy conducted?')),
                ('results', models.CharField(blank=True, max_length=255, null=True, verbose_name='results')),
                ('photos', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], null=True, verbose_name='photos?')),
                ('data_folder', models.CharField(blank=True, max_length=255, null=True, verbose_name='data folder')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='comments/details')),
                ('date_email_sent', models.DateTimeField(blank=True, null=True, verbose_name='date incident emailed')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incidents', to='whalebrary.species', verbose_name='species')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('image', models.ImageField(upload_to=whalebrary.models.image_directory_path, verbose_name='image')),
                ('date_uploaded', models.DateTimeField(auto_now=True, verbose_name='date uploaded')),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='images', to='whalebrary.incident', verbose_name='incident')),
            ],
            options={
                'ordering': ['-date_uploaded'],
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=255, verbose_name='caption')),
                ('file', models.FileField(upload_to=whalebrary.models.file_directory_path, verbose_name='file')),
                ('date_uploaded', models.DateTimeField(auto_now=True, verbose_name='date uploaded')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='files', to='whalebrary.item', verbose_name='item')),
            ],
            options={
                'ordering': ['-date_uploaded'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='item',
            unique_together={('item_name', 'size')},
        ),
    ]
