# Generated by Django 3.1.2 on 2021-03-10 19:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('shared_models', '0006_auto_20210225_1538'),
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('program_description', models.TextField(blank=True, null=True, verbose_name='program description')),
                ('location_description', models.TextField(blank=True, null=True, verbose_name='location description')),
                ('contact_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='contact name')),
                ('contact_email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='contact email')),
                ('start_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='start date')),
                ('end_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='end date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contact_users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='contact DMApps user(s)')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='edna_collection_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DNAExtractionProtocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FiltrationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LabSample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tube_identifier', models.CharField(blank=True, max_length=255, null=True, verbose_name='tube ID')),
                ('filtration_datetime', models.DateTimeField(verbose_name='filtration date')),
                ('filtration_duration_mins', models.IntegerField(blank=True, null=True, verbose_name='filtration duration (minutes)')),
                ('filtration_volume_ml', models.FloatField(blank=True, null=True, verbose_name='filtration volume (ml)')),
                ('filtration_comments', models.CharField(blank=True, max_length=1000, null=True, verbose_name='filtration comments')),
                ('filter_storage_location', models.CharField(blank=True, max_length=255, null=True, verbose_name='filter storage location')),
                ('dna_extraction_datetime', models.DateTimeField(blank=True, null=True, verbose_name='filtration date')),
                ('dna_extract_storage_location', models.CharField(blank=True, max_length=255, null=True, verbose_name='DNA extraction storage location')),
                ('pcr_datetime', models.DateTimeField(blank=True, null=True, verbose_name='PCR date')),
                ('pcr_number', models.CharField(blank=True, max_length=25, null=True, verbose_name='PCR number')),
                ('plate_id', models.CharField(blank=True, max_length=25, null=True, verbose_name='plate id')),
                ('position', models.CharField(blank=True, max_length=25, null=True, verbose_name='position')),
                ('ipc_added', models.CharField(blank=True, max_length=25, null=True, verbose_name='IPC added')),
                ('qpcr_ipc', models.FloatField(blank=True, null=True, verbose_name='qPCR IPC')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='field comments')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='edna_lab_sample_created_by', to=settings.AUTH_USER_MODEL)),
                ('dna_extraction_protocol', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lab_samples', to='edna.dnaextractionprotocol', verbose_name='DNA extraction protocol')),
            ],
            options={
                'ordering': ['field_sample', 'tube_identifier'],
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('common_name_en', models.CharField(max_length=255, verbose_name='common name (EN)')),
                ('common_name_fr', models.CharField(blank=True, max_length=255, null=True, verbose_name='common name (FR)')),
                ('scientific_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='scientific name')),
                ('tsn', models.IntegerField(blank=True, null=True, verbose_name='ITIS TSN')),
                ('aphia_id', models.IntegerField(blank=True, null=True, verbose_name='AphiaID')),
            ],
            options={
                'verbose_name_plural': 'Species',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SpeciesObservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ct_1', models.CharField(blank=True, max_length=255, null=True, verbose_name='cycle threshold (ct) - rep 1')),
                ('edna_1', models.CharField(blank=True, max_length=255, null=True, verbose_name='eDNA concentration (Pg/L) - rep 1')),
                ('ct_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='cycle threshold (ct) - rep 2')),
                ('edna_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='eDNA concentration (Pg/L) - rep 2')),
                ('ct_3', models.CharField(blank=True, max_length=255, null=True, verbose_name='cycle threshold (ct) - rep 3')),
                ('edna_3', models.CharField(blank=True, max_length=255, null=True, verbose_name='eDNA concentration (Pg/L) - rep 3')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='field comments')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='edna_obs_created_by', to=settings.AUTH_USER_MODEL)),
                ('lab_sample', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='observations', to='edna.labsample', verbose_name='lab sample')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='observations', to='edna.species', verbose_name='species')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='edna_obs_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['lab_sample', 'species'],
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(null=True, verbose_name='collection date')),
                ('site_description', models.TextField(blank=True, null=True, verbose_name='site description')),
                ('site_identifier', models.CharField(blank=True, max_length=255, null=True, verbose_name='site identifier')),
                ('collector', models.CharField(blank=True, max_length=255, null=True, verbose_name='weather notes')),
                ('sample_identifier', models.CharField(blank=True, max_length=255, null=True, verbose_name='sample identifier')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='longitude')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='field comments')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='samples', to='edna.collection', verbose_name='collection')),
            ],
            options={
                'ordering': ['-datetime', 'collection'],
            },
        ),
        migrations.AddField(
            model_name='labsample',
            name='field_sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lab_samples', to='edna.sample', verbose_name='field sample'),
        ),
        migrations.AddField(
            model_name='labsample',
            name='updated_by',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='edna_lab_sample_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collection',
            name='filtration_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='collections', to='edna.filtrationtype', verbose_name='filtration type'),
        ),
        migrations.AddField(
            model_name='collection',
            name='fiscal_year',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='collections', to='shared_models.fiscalyear'),
        ),
        migrations.AddField(
            model_name='collection',
            name='province',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='edna_collections', to='shared_models.province'),
        ),
        migrations.AddField(
            model_name='collection',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='edna_collections', to='shared_models.region', verbose_name='DFO region'),
        ),
        migrations.AddField(
            model_name='collection',
            name='tags',
            field=models.ManyToManyField(blank=True, to='edna.Tag', verbose_name='tags'),
        ),
        migrations.AddField(
            model_name='collection',
            name='updated_by',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='edna_collection_updated_by', to=settings.AUTH_USER_MODEL),
        ),
    ]
