# Generated by Django 3.2 on 2021-04-21 00:27

import csas2.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('shared_models', '0008_auto_20210419_0813'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CSASRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True, verbose_name='unique identifier')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.IntegerField(choices=[(1, 'New'), (2, 'Previous')], default=1, verbose_name='type')),
                ('language', models.IntegerField(choices=[(1, 'English'), (2, 'French')], default=1, verbose_name='language of request')),
                ('name', models.CharField(blank=True, max_length=1000, null=True, verbose_name='tittle (en)')),
                ('nom', models.CharField(blank=True, max_length=1000, null=True, verbose_name='tittle (fr)')),
                ('is_multiregional', models.BooleanField(default=False, verbose_name='Does this request involve more than one region (zonal) or more than one client sector?')),
                ('multiregional_text', models.TextField(blank=True, null=True, verbose_name='Please provide the contact name, sector, and region for all involved.')),
                ('issue', models.TextField(help_text='Should be phrased as a question to be answered by Science', verbose_name='Issue requiring science information and/or advice')),
                ('had_assistance', models.BooleanField(default=False, help_text='E.g. with CSAS and/or DFO science staff.', verbose_name='Have you had assistance from Science in developing the question/request?')),
                ('assistance_text', models.TextField(blank=True, null=True, verbose_name=' Please provide details about the assistance received')),
                ('rationale', models.TextField(help_text='What will the information/advice be used for? Who will be the end user(s)? Will it impact other DFO programs or regions?', verbose_name='Rationale or context for the request')),
                ('risk_text', models.TextField(blank=True, null=True, verbose_name='What is the expected consequence if science advice is not provided?')),
                ('advice_needed_by', models.DateTimeField(verbose_name='Latest possible date to receive Science advice')),
                ('rationale_for_timeline', models.TextField(blank=True, help_text='e.g., COSEWIC or consultation meetings, Environmental Assessments, legal or regulatory requirement, Treaty obligation, international commitments, etc).Please elaborate and provide anticipatory dates', null=True, verbose_name='Rationale for deadline?')),
                ('has_funding', models.BooleanField(default=False, help_text='i.e., special analysis, meeting costs, translation)?', verbose_name='Do you have funds to cover any extra costs associated with this request?')),
                ('funding_text', models.TextField(blank=True, null=True, verbose_name='Please describe')),
                ('prioritization', models.IntegerField(blank=True, choices=[(1, 'High'), (2, 'Medium'), (3, 'Low')], null=True, verbose_name='How would you classify the prioritization of this request?')),
                ('prioritization_text', models.TextField(blank=True, null=True, verbose_name='What is the rationale behind the prioritization?')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('status', models.IntegerField(choices=[(1, 'Draft'), (2, 'Submitted'), (3, 'Under review'), (11, 'On'), (12, 'Off'), (13, 'Withdrawn')], default=1, editable=False, verbose_name='status')),
                ('submission_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='submission date')),
                ('old_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='csas_client_requests', to=settings.AUTH_USER_MODEL, verbose_name='DFO client')),
                ('coordinator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='csas_coordinator_requests', to=settings.AUTH_USER_MODEL, verbose_name='Regional CSAS coordinator')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='csasrequest_created_by', to=settings.AUTH_USER_MODEL)),
                ('fiscal_year', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='csas_requests', to='shared_models.fiscalyear', verbose_name='fiscal year')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='csas_requests', to='shared_models.section', verbose_name='section')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='csasrequest_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'CSAS Requests',
                'ordering': ('fiscal_year', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.IntegerField(choices=[(1, 'Steering Committee Meeting'), (2, 'Science Management Meeting'), (3, 'Advisory Process Meeting (RAP)')], verbose_name='type of meeting')),
                ('location', models.CharField(blank=True, help_text='City, State/Province, Country', max_length=1000, null=True, verbose_name='location')),
                ('start_date', models.DateTimeField(verbose_name='initial activity date')),
                ('end_date', models.DateTimeField(verbose_name='anticipated end date')),
                ('hide_from_list', models.BooleanField(default=False, verbose_name='This record should be hidden from the main search page')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='meeting_created_by', to=settings.AUTH_USER_MODEL)),
                ('fiscal_year', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='meetings', to='shared_models.fiscalyear', verbose_name='fiscal year')),
            ],
            options={
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True, verbose_name='unique identifier')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=1000, null=True, verbose_name='tittle (en)')),
                ('nom', models.CharField(blank=True, max_length=1000, null=True, verbose_name='tittle (fr)')),
                ('scope', models.IntegerField(choices=[(1, 'Regional'), (2, 'Zonal'), (3, 'National')], verbose_name='scope')),
                ('type', models.IntegerField(choices=[(1, 'Advisory Meeting'), (2, 'Science Response Process'), (3, 'Peer Review')], verbose_name='type')),
                ('context', models.TextField(blank=True, null=True, verbose_name='context')),
                ('objectives', models.TextField(blank=True, null=True, verbose_name='objectives')),
                ('expected_publications', models.TextField(blank=True, null=True, verbose_name='expected publications')),
                ('advisors', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='DFO Science advisors')),
                ('coordinator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='csas_coordinator_processes', to=settings.AUTH_USER_MODEL, verbose_name='Lead coordinator')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='process_created_by', to=settings.AUTH_USER_MODEL)),
                ('csas_requests', models.ManyToManyField(related_name='processes', to='csas2.CSASRequest', verbose_name='Connected CSAS requests')),
                ('lead_region', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='process_lead_regions', to='shared_models.region', verbose_name='lead region')),
                ('other_regions', models.ManyToManyField(blank=True, to='shared_models.Region', verbose_name='other regions')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='process_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MeetingResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('url_en', models.URLField(blank=True, null=True, verbose_name='url (English)')),
                ('url_fr', models.URLField(blank=True, null=True, verbose_name='url (French)')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='meetingresource_created_by', to=settings.AUTH_USER_MODEL)),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='csas2.meeting')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='meetingresource_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MeetingNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.IntegerField(choices=[(1, 'To Do'), (2, 'Next step'), (3, 'General comment')], verbose_name='type')),
                ('note', models.TextField(verbose_name='note')),
                ('is_complete', models.BooleanField(default=False, verbose_name='complete?')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='meetingnote_created_by', to=settings.AUTH_USER_MODEL)),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='csas2.meeting')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='meetingnote_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['is_complete', '-updated_at'],
            },
        ),
        migrations.AddField(
            model_name='meeting',
            name='process',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='meetings', to='csas2.process', verbose_name='process'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='updated_by',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='meeting_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Invitee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.IntegerField(choices=[(1, 'Participant'), (2, 'Chair'), (3, 'Expert'), (4, 'Steering Committee Member')], default=1, verbose_name='Function')),
                ('status', models.IntegerField(choices=[(0, 'Invited'), (1, 'Accepted'), (2, 'Declined'), (9, 'No response')], default=0, verbose_name='status')),
                ('invitation_sent_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='date invitation was sent')),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitees', to='csas2.meeting')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meeting_invites', to='shared_models.person')),
                ('resources_received', models.ManyToManyField(editable=False, to='csas2.MeetingResource')),
            ],
            options={
                'ordering': ['person__first_name', 'person__last_name'],
                'unique_together': {('meeting', 'person')},
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.IntegerField(choices=[(1, 'Meeting Minutes'), (2, 'Science Advisory Report'), (3, 'Research Document'), (4, 'Proceedings'), (5, 'Science Response')], verbose_name='type')),
                ('hide_from_list', models.BooleanField(default=False, verbose_name='This record should be hidden from the main search page')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='document_created_by', to=settings.AUTH_USER_MODEL)),
                ('meetings', models.ManyToManyField(blank=True, related_name='documents', to='csas2.Meeting')),
                ('process', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='csas2.process')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='document_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CSASRequestReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('prioritization', models.IntegerField(blank=True, choices=[(1, 'High'), (2, 'Medium'), (3, 'Low')], null=True, verbose_name='prioritization')),
                ('prioritization_text', models.TextField(blank=True, null=True, verbose_name='prioritization notes')),
                ('decision', models.IntegerField(blank=True, choices=[(1, 'On'), (2, 'Off'), (3, 'Withdrawn')], null=True, verbose_name='decision')),
                ('decision_text', models.TextField(blank=True, null=True, verbose_name='Decision explanation')),
                ('decision_date', models.DateTimeField(blank=True, null=True, verbose_name='decision date')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='administrative notes')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='csasrequestreview_created_by', to=settings.AUTH_USER_MODEL)),
                ('csas_request', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='review', to='csas2.csasrequest')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='csasrequestreview_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CSASRequestFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to=csas2.models.request_directory_path)),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('csas_request', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='csas2.csasrequest')),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='date')),
                ('invitee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance', to='csas2.invitee', verbose_name='attendee')),
            ],
            options={
                'ordering': ['date'],
                'unique_together': {('invitee', 'date')},
            },
        ),
    ]
