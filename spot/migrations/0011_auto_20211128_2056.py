# Generated by Django 3.1.2 on 2021-11-29 04:56

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('spot', '0010_auto_20211125_1457'),
    ]

    operations = [
        migrations.CreateModel(
            name='CapacityBuilding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CoreComponent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataBarrier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DatabaseChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataCommunication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataPrograms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FieldWorkMethodType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FundingSources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ObjectiveCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OutComeBarrier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlanningMethodType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectPurpose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectSubType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalmonLifeStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SampleBarrier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SampleFormat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SampleProcessingMethodType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SamplesCollected',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SupportiveComponent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.AlterModelOptions(
            name='data',
            options={'ordering': ['project']},
        ),
        migrations.AlterModelOptions(
            name='objective',
            options={'ordering': ['project']},
        ),
        migrations.RemoveField(
            model_name='data',
            name='barrier_data_check_entry',
        ),
        migrations.RemoveField(
            model_name='data',
            name='data_communication',
        ),
        migrations.RemoveField(
            model_name='data',
            name='data_products',
        ),
        migrations.RemoveField(
            model_name='data',
            name='data_products_database',
        ),
        migrations.RemoveField(
            model_name='data',
            name='data_programs',
        ),
        migrations.RemoveField(
            model_name='data',
            name='sample_barrier',
        ),
        migrations.RemoveField(
            model_name='data',
            name='sample_format',
        ),
        migrations.RemoveField(
            model_name='data',
            name='samples_collected',
        ),
        migrations.RemoveField(
            model_name='data',
            name='samples_collected_database',
        ),
        migrations.RemoveField(
            model_name='data',
            name='species',
        ),
        migrations.RemoveField(
            model_name='method',
            name='field_work_method_type',
        ),
        migrations.RemoveField(
            model_name='method',
            name='planning_method_type',
        ),
        migrations.RemoveField(
            model_name='method',
            name='sample_processing_method_type',
        ),
        migrations.RemoveField(
            model_name='objective',
            name='capacity_building',
        ),
        migrations.RemoveField(
            model_name='objective',
            name='objective_category',
        ),
        migrations.RemoveField(
            model_name='objective',
            name='outcome_barrier',
        ),
        migrations.RemoveField(
            model_name='objective',
            name='species',
        ),
        migrations.RemoveField(
            model_name='project',
            name='core_component',
        ),
        migrations.RemoveField(
            model_name='project',
            name='funding_sources',
        ),
        migrations.RemoveField(
            model_name='project',
            name='project_purpose',
        ),
        migrations.RemoveField(
            model_name='project',
            name='project_sub_type',
        ),
        migrations.RemoveField(
            model_name='project',
            name='project_theme',
        ),
        migrations.AlterField(
            model_name='project',
            name='region',
            field=models.CharField(blank=True, choices=[('Yukon', 'Yukon/Transboundary'), ('NCA', 'North Coast'), ('SCA', 'South Coast'), ('FIA', 'Fraser')], default=None, max_length=255, null=True, verbose_name='Region'),
        ),
        migrations.RemoveField(
            model_name='project',
            name='salmon_life_stage',
        ),
        migrations.RemoveField(
            model_name='project',
            name='species',
        ),
        migrations.RemoveField(
            model_name='project',
            name='supportive_component',
        ),
        migrations.AddField(
            model_name='data',
            name='barrier_data_check_entry',
            field=models.ManyToManyField(blank=True, default=None, to='spot.DataBarrier', verbose_name='Barriers to data checks/entry to database?'),
        ),
        migrations.AddField(
            model_name='data',
            name='data_communication',
            field=models.ManyToManyField(blank=True, default=None, to='spot.DataCommunication', verbose_name='How Was Data Communicated to Recipient?'),
        ),
        migrations.AddField(
            model_name='data',
            name='data_products',
            field=models.ManyToManyField(blank=True, default=None, to='spot.DataProducts', verbose_name='Data Product(s)'),
        ),
        migrations.AddField(
            model_name='data',
            name='data_products_database',
            field=models.ManyToManyField(blank=True, default=None, related_name='data_products', to='spot.DatabaseChoice', verbose_name='Data Products Database(s)'),
        ),
        migrations.AddField(
            model_name='data',
            name='data_programs',
            field=models.ManyToManyField(blank=True, default=None, to='spot.DataPrograms', verbose_name='Data Program(s)'),
        ),
        migrations.AddField(
            model_name='data',
            name='sample_barrier',
            field=models.ManyToManyField(blank=True, default=None, to='spot.SampleBarrier', verbose_name='Barriers to Sample Collection'),
        ),
        migrations.AddField(
            model_name='data',
            name='sample_format',
            field=models.ManyToManyField(blank=True, default=None, to='spot.SampleFormat', verbose_name='Sample Format(s)'),
        ),
        migrations.AddField(
            model_name='data',
            name='samples_collected',
            field=models.ManyToManyField(blank=True, default=None, to='spot.SamplesCollected', verbose_name='Samples Collected'),
        ),
        migrations.AddField(
            model_name='data',
            name='samples_collected_database',
            field=models.ManyToManyField(blank=True, default=None, related_name='sample_database', to='spot.DatabaseChoice', verbose_name='Sample Collected Database'),
        ),
        migrations.AddField(
            model_name='data',
            name='species',
            field=models.ManyToManyField(blank=True, default=None, to='spot.Species', verbose_name='Species'),
        ),
        migrations.AddField(
            model_name='method',
            name='field_work_method_type',
            field=models.ManyToManyField(blank=True, default=None, to='spot.FieldWorkMethodType', verbose_name='Field Work Methods Type'),
        ),
        migrations.AddField(
            model_name='method',
            name='planning_method_type',
            field=models.ManyToManyField(blank=True, default=None, to='spot.PlanningMethodType', verbose_name='Planning Method Type'),
        ),
        migrations.AddField(
            model_name='method',
            name='sample_processing_method_type',
            field=models.ManyToManyField(blank=True, default=None, to='spot.SampleProcessingMethodType', verbose_name='Sample Processing Method Type'),
        ),
        migrations.AddField(
            model_name='objective',
            name='capacity_building',
            field=models.ManyToManyField(blank=True, default=None, to='spot.CapacityBuilding', verbose_name='What capacity building did this project provide?'),
        ),
        migrations.AddField(
            model_name='objective',
            name='objective_category',
            field=models.ManyToManyField(blank=True, default=None, to='spot.ObjectiveCategory', verbose_name='Objective Category'),
        ),
        migrations.AddField(
            model_name='objective',
            name='outcome_barrier',
            field=models.ManyToManyField(blank=True, default=None, to='spot.OutComeBarrier', verbose_name='Barrier to Achieve Outcomes(?)'),
        ),
        migrations.AddField(
            model_name='objective',
            name='species',
            field=models.ManyToManyField(blank=True, default=None, to='spot.Species', verbose_name='Species'),
        ),
        migrations.AddField(
            model_name='project',
            name='core_component',
            field=models.ManyToManyField(blank=True, to='spot.CoreComponent', verbose_name='Core Component'),
        ),
        migrations.AddField(
            model_name='project',
            name='funding_sources',
            field=models.ManyToManyField(blank=True, to='spot.FundingSources', verbose_name='Funding Sources'),
        ),
        migrations.AddField(
            model_name='project',
            name='project_purpose',
            field=models.ManyToManyField(blank=True, to='spot.ProjectPurpose', verbose_name='Project Purpose'),
        ),
        migrations.AddField(
            model_name='project',
            name='project_sub_type',
            field=models.ManyToManyField(blank=True, default=None, to='spot.ProjectSubType', verbose_name='Project Sub Type'),
        ),
        migrations.AddField(
            model_name='project',
            name='project_theme',
            field=models.ManyToManyField(blank=True, default=None, to='spot.ProjectTheme', verbose_name='Project Theme'),
        ),
        migrations.AddField(
            model_name='project',
            name='salmon_life_stage',
            field=models.ManyToManyField(blank=True, to='spot.SalmonLifeStage', verbose_name='Salmon Life Stage'),
        ),
        migrations.AddField(
            model_name='project',
            name='species',
            field=models.ManyToManyField(blank=True, default=None, to='spot.Species', verbose_name='Target Species'),
        ),
        migrations.AddField(
            model_name='project',
            name='supportive_component',
            field=models.ManyToManyField(blank=True, to='spot.SupportiveComponent', verbose_name='Supportive Component'),
        ),
    ]
