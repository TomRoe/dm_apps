# Generated by Django 3.1.2 on 2021-10-07 21:16

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LakeSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Method',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_work_method_type', models.CharField(blank=True, default=None, max_length=255, verbose_name='Field Work Methods Type')),
                ('planning_method_type', models.CharField(blank=True, default=None, max_length=255, verbose_name='Planning Method Type')),
                ('sample_processing_method_type', models.CharField(blank=True, default=None, max_length=255, verbose_name='Sample Processing Method Type')),
                ('date_last_modified', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='date last modified')),
            ],
            options={
                'ordering': ['project'],
            },
        ),
        migrations.CreateModel(
            name='Objective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_description', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Task Description')),
                ('element_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Element Title')),
                ('activity_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Activity Title')),
                ('pst_requirement', models.BooleanField(default=False, verbose_name='PST Requirement Identified?')),
                ('objective_category', models.CharField(blank=True, default=None, max_length=64, null=True, verbose_name='Objective Category')),
                ('species', models.CharField(blank=True, default=None, max_length=10, null=True, verbose_name='Species')),
                ('sil_requirement', models.BooleanField(default=False, verbose_name='SIL Requirement')),
                ('expected_results', models.CharField(blank=True, max_length=255, null=True, verbose_name='Expected Result(s)')),
                ('dfo_report', models.CharField(blank=True, max_length=255, null=True, verbose_name='Products/Reports to Provide DFO')),
                ('outcome_met', models.BooleanField(default=False, verbose_name='Was the outcome met?')),
                ('outcomes_comment', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Outcome Comment')),
                ('outcome_barrier', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Barrier to Achieve Outcomes(?)')),
                ('capacity_building', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='What capacity building did this project provide?')),
                ('key_lesson', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Key Lessons Learned')),
                ('missed_opportunities', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Missed Opportunities')),
                ('date_last_modified', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='date last modified')),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='last modified by')),
            ],
            options={
                'ordering': ['location'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, verbose_name='Name')),
                ('address', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Address')),
                ('organization_type', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Organization Type')),
                ('province', models.CharField(blank=True, max_length=255, null=True, verbose_name='Province/State')),
                ('country', models.CharField(blank=True, max_length=255, null=True, verbose_name='Country')),
                ('phone', models.CharField(blank=True, max_length=100, null=True, verbose_name='Phone')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='City')),
                ('email', models.EmailField(blank=True, max_length=1000, null=True, verbose_name='Email')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website')),
                ('section', models.CharField(blank=True, max_length=255, null=True, verbose_name='Section')),
                ('date_last_modified', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='date last modified')),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='organization_last_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='last modified by')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Last Name')),
                ('phone', models.CharField(blank=True, max_length=100, null=True, verbose_name='Phone')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='City')),
                ('province', models.CharField(blank=True, max_length=255, null=True, verbose_name='Province/State')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('role', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Role')),
                ('section', models.CharField(blank=True, max_length=100, null=True, verbose_name='Section')),
                ('other_membership', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Other Membership')),
                ('date_last_modified', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='date last modified')),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='last modified by')),
                ('organizations', models.ManyToManyField(blank=True, default=None, to='spot.Organization', verbose_name='Organization')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agreement_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Agreement Number')),
                ('name', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Project Name')),
                ('project_description', models.TextField(blank=True, max_length=5000, null=True, verbose_name='Project Description')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Starting Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('ecosystem_type', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Eco System Type')),
                ('management_area', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(142)], verbose_name='Management Area')),
                ('region', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Region')),
                ('stock_management_unit', models.CharField(blank=True, default=None, max_length=64, null=True, verbose_name='Stock Management Unit')),
                ('cu_index', models.CharField(blank=True, max_length=100, null=True, verbose_name='CU Index')),
                ('cu_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='CU Name')),
                ('species', models.CharField(blank=True, default=None, max_length=255, verbose_name='Target Species')),
                ('salmon_life_stage', models.CharField(blank=True, max_length=255, null=True, verbose_name='Salmon Life Stage')),
                ('project_type', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Project Type')),
                ('project_sub_type', models.CharField(blank=True, default=None, max_length=255, verbose_name='Project Sub Type')),
                ('project_theme', models.CharField(blank=True, default=None, max_length=255, verbose_name='Project Theme')),
                ('project_stage', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Project Stage')),
                ('monitoring_approach', models.CharField(blank=True, max_length=255, null=True, verbose_name='Monitoring Approach')),
                ('core_component', models.CharField(blank=True, max_length=255, verbose_name='Core Component')),
                ('supportive_component', models.CharField(blank=True, max_length=255, verbose_name='Supportive Component')),
                ('project_purpose', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project Purpose')),
                ('category_comments', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Category Comments')),
                ('DFO_link', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Link to other DFO Programs')),
                ('DFO_program_reference', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Linked DFO Program Project Reference')),
                ('government_organization', models.CharField(blank=True, max_length=255, null=True, verbose_name='Link to other Government Departments')),
                ('first_nations_contact_role', models.CharField(blank=True, default=None, max_length=32, null=True, verbose_name='First Nations Contact Role')),
                ('contractor', models.CharField(blank=True, max_length=255, null=True, verbose_name='Contractors')),
                ('contractor_contact', models.CharField(blank=True, max_length=255, null=True, verbose_name='Contractor Contact')),
                ('agreement_database', models.CharField(blank=True, max_length=255, null=True, verbose_name='Agreement Database')),
                ('agreement_comment', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Agreement Comment')),
                ('funding_sources', models.CharField(blank=True, max_length=255, null=True, verbose_name='Funding Sources')),
                ('other_funding_sources', models.CharField(blank=True, max_length=255, null=True, verbose_name="If you have chosen 'Other' in funding sources above please provide them")),
                ('agreement_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Agreement Type')),
                ('project_lead_organization', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project Lead Organization')),
                ('date_last_modified', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='date last modified')),
                ('DFO_aboriginal_AAA', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='DFO_aboriginal_AAA', to='spot.person', verbose_name='DFO Aboriginal AAA')),
                ('DFO_area_chief', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='DFO_area_chief', to='spot.person', verbose_name='DFO Area Chief')),
                ('DFO_project_authority', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='DFO_project_authority', to='spot.person', verbose_name='DFO Project Authority')),
                ('DFO_resource_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='DFO_resource_manager', to='spot.person', verbose_name='DFO Resource Manager')),
                ('DFO_technicians', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='DFO_technicians', to='spot.person', verbose_name='DFO Technicians')),
                ('agreement_history', models.ManyToManyField(blank=True, default=None, to='spot.Project', verbose_name='Agreement History')),
                ('first_nations_contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='first_nations_contact', to='spot.person', verbose_name='First Nations Contact')),
                ('lake_system', models.ManyToManyField(blank=True, default=None, related_name='project', to='spot.LakeSystem', verbose_name='Lake System')),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='last modified by')),
                ('partner', models.ManyToManyField(blank=True, related_name='partner', to='spot.Organization', verbose_name='Partner')),
                ('partner_contact', models.ManyToManyField(blank=True, related_name='partner_contact', to='spot.Person', verbose_name='Partner Contact')),
            ],
            options={
                'ordering': ['agreement_number', 'name', 'region', 'primary_river', 'DFO_project_authority'],
            },
        ),
        migrations.CreateModel(
            name='River',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Name')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitude')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Watershed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
                ('group_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Group Code')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Reports',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_timeline', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Report Timeline')),
                ('report_type', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Report Type')),
                ('report_concerns', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Report Limitations and Concerns')),
                ('document_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Document Name')),
                ('document_author', models.CharField(blank=True, max_length=255, null=True, verbose_name='Document Author')),
                ('document_reference_information', models.CharField(blank=True, max_length=255, null=True, verbose_name='Document Reference Information')),
                ('document_link', models.CharField(blank=True, max_length=255, null=True, verbose_name='Document Link')),
                ('date_last_modified', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='date last modified')),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='last modified by')),
                ('project', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_report', to='spot.project', verbose_name='Agreement Number')),
            ],
            options={
                'ordering': ['document_name'],
            },
        ),
        migrations.AddField(
            model_name='project',
            name='primary_river',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='primary_river', to='spot.river', verbose_name='Primary River'),
        ),
        migrations.AddField(
            model_name='project',
            name='secondary_river',
            field=models.ManyToManyField(blank=True, related_name='secondary_river', to='spot.River', verbose_name='Secondary River'),
        ),
        migrations.AddField(
            model_name='project',
            name='tribal_council',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tribal_council', to='spot.organization', verbose_name='Tribal Council'),
        ),
        migrations.AddField(
            model_name='project',
            name='watershed',
            field=models.ManyToManyField(blank=True, default=None, related_name='proeject', to='spot.Watershed', verbose_name='Watershed'),
        ),
        migrations.CreateModel(
            name='ObjectiveOutcome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outcome_category', models.CharField(blank=True, max_length=255, null=True, verbose_name='outcomes category')),
                ('date_last_modified', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='date last modified')),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='last modified by')),
                ('objective', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='objective_outcome', to='spot.objective', verbose_name='Objective')),
                ('report_reference', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='objective_outcome', to='spot.reports', verbose_name='report reference')),
            ],
            options={
                'ordering': ['report_reference'],
            },
        ),
        migrations.CreateModel(
            name='ObjectiveDataTypeQuality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('species', models.CharField(blank=True, max_length=255, null=True, verbose_name='Species')),
                ('sample_type', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Sample Type')),
                ('outcome_delivered', models.BooleanField(default=False, verbose_name='Was the outcome/sample delivered?')),
                ('outcome_report_delivered', models.BooleanField(default=False, verbose_name='Were outcome reports delivered?')),
                ('outcome_quality', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Quality of Outcome')),
                ('date_last_modified', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='date last modified')),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='last modified by')),
                ('location', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='spot.river', verbose_name='Location')),
                ('objective', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='objective_type_quality', to='spot.objective', verbose_name='Objective')),
            ],
            options={
                'ordering': ['sample_type'],
            },
        ),
        migrations.AddField(
            model_name='objective',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='project_objective', to='spot.river', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='objective',
            name='outcomes_contact',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='project_objective', to='spot.person', verbose_name='Outcomes Contact'),
        ),
        migrations.AddField(
            model_name='objective',
            name='project',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_objective', to='spot.project', verbose_name='Agreement Number'),
        ),
        migrations.CreateModel(
            name='MethodDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method_document_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='method document type')),
                ('authors', models.CharField(blank=True, max_length=100, null=True, verbose_name='author')),
                ('publication_year', models.CharField(blank=True, max_length=10, null=True, verbose_name='year of publication')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='title')),
                ('reference_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='reference number')),
                ('document_link', models.CharField(blank=True, max_length=255, null=True, verbose_name='document link')),
                ('date_last_modified', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='date last modified')),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='last modified by')),
                ('method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='method_document', to='spot.method', verbose_name='method')),
            ],
            options={
                'ordering': ['method_document_type'],
            },
        ),
        migrations.AddField(
            model_name='method',
            name='DNA_processing_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='project_method_DNA', to='spot.organization', verbose_name='DNA Processing Location'),
        ),
        migrations.AddField(
            model_name='method',
            name='heads_processing_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='project_method_heads', to='spot.organization', verbose_name='Heads Processing Location'),
        ),
        migrations.AddField(
            model_name='method',
            name='instrument_data_processing_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='project_method_instrument', to='spot.organization', verbose_name='Instrument Data Processing Location'),
        ),
        migrations.AddField(
            model_name='method',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='last modified by'),
        ),
        migrations.AddField(
            model_name='method',
            name='otolith_processing_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='project_method_otolith', to='spot.organization', verbose_name='Otolith Processing Location'),
        ),
        migrations.AddField(
            model_name='method',
            name='project',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_method', to='spot.project', verbose_name='Agreement Number'),
        ),
        migrations.AddField(
            model_name='method',
            name='scale_processing_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='project_method_scale', to='spot.organization', verbose_name='Scale Processing Location'),
        ),
        migrations.CreateModel(
            name='Meetings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('location', models.CharField(blank=True, max_length=255, null=True, verbose_name='Location')),
                ('description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Description')),
                ('FN_communications', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='FN Communications')),
                ('date_last_modified', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='date last modified')),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='last modified by')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FundingYears',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funding_year', models.CharField(blank=True, max_length=255, null=True, verbose_name='Funding Year')),
                ('agreement_cost', models.FloatField(blank=True, null=True, verbose_name='Agreement Cost')),
                ('project_cost', models.FloatField(blank=True, null=True, verbose_name='Project Cost')),
                ('date_last_modified', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='date last modified')),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='last modified by')),
                ('project', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='funding_year', to='spot.project', verbose_name='project')),
            ],
            options={
                'ordering': ['funding_year'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, choices=[('PEOPLE', 'People'), ('PROJECTS', 'Projects'), ('OBJECTIVES', 'Objectives'), ('METHODS', 'Methods'), ('DATA', 'Data'), ('ORGANIZATIONS', 'Organizations'), ('OTHER', 'Other')], default=None, max_length=255, null=True, verbose_name='Subject')),
                ('comment', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Comments')),
                ('date_last_modified', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='date last modified')),
                ('sent_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Sent By')),
            ],
            options={
                'ordering': ['subject'],
            },
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('species_data', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Species Data')),
                ('samples_collected', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Samples Collected')),
                ('samples_collected_comment', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Samples Collected Comment')),
                ('samples_data_database', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Sample Data Database')),
                ('shared_drive', models.CharField(blank=True, max_length=255, null=True, verbose_name='If you have chosen one of the shared drives please specify what drive otherwise leave blank')),
                ('sample_barrier', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Barriers to Sample Collection')),
                ('sample_entered_database', models.BooleanField(blank=True, default=False, null=True, verbose_name='Was sample collection data entered into database(s)?')),
                ('data_quality_check', models.BooleanField(blank=True, default=False, null=True, verbose_name='Was sample data quality check complete?')),
                ('data_quality_person', models.CharField(blank=True, max_length=255, null=True, verbose_name='Person/Group responsible for data quality check?')),
                ('barrier_data_check_entry', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Barriers to data checks/entry to database?')),
                ('sample_format', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Sample Format(s)')),
                ('data_products', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Data Product(s)')),
                ('data_products_database', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Data Products Database(s)')),
                ('data_products_comment', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Data Products Comment')),
                ('data_programs', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Data Program(s)')),
                ('data_communication', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='How Was Data Communicated to Recipient?')),
                ('date_last_modified', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='date last modified')),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='last modified by')),
                ('project', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_data', to='spot.project', verbose_name='Agreement Number')),
            ],
            options={
                'ordering': ['species_data'],
            },
        ),
    ]
