# Generated by Django 3.2 on 2021-04-14 17:40

import bio_diversity.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('bio_diversity', '0004_auto_20210414_1340'),
    ]

    operations = [
        migrations.AlterField(
            model_name='eventfile',
            name='comments',
            field=models.CharField(blank=True, db_column='COMMENTS', max_length=2000, null=True, verbose_name='Comments'),
        ),
        migrations.AlterField(
            model_name='eventfile',
            name='evnt_id',
            field=models.ForeignKey(db_column='EVENT_ID', on_delete=django.db.models.deletion.CASCADE, related_name='event_files', to='bio_diversity.event', verbose_name='Event'),
        ),
        migrations.AlterField(
            model_name='eventfile',
            name='evntf_xls',
            field=models.FileField(blank=True, db_column='EVENT_FILE', null=True, upload_to=bio_diversity.models.evntf_directory_path, verbose_name='Event File'),
        ),
        migrations.AlterField(
            model_name='eventfile',
            name='evntfc_id',
            field=models.ForeignKey(db_column='EVT_FILE_CODE_ID', on_delete=django.db.models.deletion.CASCADE, related_name='event_files', to='bio_diversity.eventfilecode', verbose_name='Event File Code'),
        ),
        migrations.AlterField(
            model_name='eventfile',
            name='stok_id',
            field=models.ForeignKey(blank=True, db_column='STOCK_ID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_files', to='bio_diversity.stockcode', verbose_name='Stock Code'),
        ),
        migrations.AlterField(
            model_name='fecundity',
            name='alpha',
            field=models.DecimalField(db_column='A', decimal_places=3, max_digits=10, verbose_name='A'),
        ),
        migrations.AlterField(
            model_name='fecundity',
            name='beta',
            field=models.DecimalField(db_column='B', decimal_places=3, max_digits=10, verbose_name='B'),
        ),
        migrations.AlterField(
            model_name='fecundity',
            name='coll_id',
            field=models.ForeignKey(blank=True, db_column='COLLECTION_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.collection', verbose_name='Collection'),
        ),
        migrations.AlterField(
            model_name='fecundity',
            name='stok_id',
            field=models.ForeignKey(db_column='STOCK_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.stockcode', verbose_name='Stock Code'),
        ),
        migrations.AlterField(
            model_name='feedcode',
            name='manufacturer',
            field=models.CharField(db_column='MANUFACTURER', max_length=50, verbose_name='Maufacturer'),
        ),
        migrations.AlterField(
            model_name='feeding',
            name='amt',
            field=models.DecimalField(db_column='AMOUNT', decimal_places=3, max_digits=7, verbose_name='Amount of Feed'),
        ),
        migrations.AlterField(
            model_name='feeding',
            name='comments',
            field=models.CharField(blank=True, db_column='COMMENTS', max_length=2000, null=True, verbose_name='Comments'),
        ),
        migrations.AlterField(
            model_name='feeding',
            name='contx_id',
            field=models.OneToOneField(db_column='CONTAINER_XREF_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.containerxref', verbose_name='Container Cross Reference'),
        ),
        migrations.AlterField(
            model_name='feeding',
            name='feedc_id',
            field=models.ForeignKey(db_column='FEED_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.feedcode', verbose_name='Feeding Code'),
        ),
        migrations.AlterField(
            model_name='feeding',
            name='feedm_id',
            field=models.ForeignKey(db_column='FEEDMETHOD_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.feedmethod', verbose_name='Feeding Method'),
        ),
        migrations.AlterField(
            model_name='feeding',
            name='freq',
            field=models.CharField(blank=True, db_column='FREQUENCY', max_length=40, null=True, verbose_name='Description of frequency'),
        ),
        migrations.AlterField(
            model_name='feeding',
            name='lot_num',
            field=models.CharField(blank=True, db_column='LOT_NUMBER', max_length=40, null=True, verbose_name='Lot Number'),
        ),
        migrations.AlterField(
            model_name='feeding',
            name='unit_id',
            field=models.ForeignKey(db_column='UNIT_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.unitcode', verbose_name='Units'),
        ),
        migrations.AlterField(
            model_name='group',
            name='coll_id',
            field=models.ForeignKey(db_column='COLLECTION_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.collection', verbose_name='Collection'),
        ),
        migrations.AlterField(
            model_name='group',
            name='comments',
            field=models.CharField(blank=True, db_column='COMMENTTS', max_length=2000, null=True, verbose_name='Comments'),
        ),
        migrations.AlterField(
            model_name='group',
            name='grp_valid',
            field=models.BooleanField(db_column='STILL_VALID', default='True', verbose_name='Group still valid?'),
        ),
        migrations.AlterField(
            model_name='group',
            name='grp_year',
            field=models.IntegerField(db_column='YEAR', default=2000, validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2100)], verbose_name='Collection year'),
        ),
        migrations.AlterField(
            model_name='group',
            name='spec_id',
            field=models.ForeignKey(db_column='SPEC_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.speciescode', verbose_name='Species'),
        ),
        migrations.AlterField(
            model_name='group',
            name='stok_id',
            field=models.ForeignKey(db_column='STOCK_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.stockcode', verbose_name='Stock Code'),
        ),
        migrations.AlterField(
            model_name='groupdet',
            name='adsc_id',
            field=models.ForeignKey(blank=True, db_column='ANI_DET_SUBJ_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.anidetsubjcode', verbose_name='Animal Detail Subjective Code'),
        ),
        migrations.AlterField(
            model_name='groupdet',
            name='anidc_id',
            field=models.ForeignKey(db_column='ANI_DET_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.animaldetcode', verbose_name='Animal Detail Code'),
        ),
        migrations.AlterField(
            model_name='groupdet',
            name='anix_id',
            field=models.ForeignKey(db_column='ANI_DET_XREF_ID', on_delete=django.db.models.deletion.CASCADE, related_name='group_details', to='bio_diversity.anidetailxref', verbose_name='Animal Detail Cross Reference'),
        ),
        migrations.AlterField(
            model_name='groupdet',
            name='det_val',
            field=models.CharField(blank=True, db_column='VAL', max_length=20, null=True, verbose_name='Value'),
        ),
        migrations.AlterField(
            model_name='groupdet',
            name='detail_date',
            field=models.DateField(db_column='DETAIL_DATE', verbose_name='Date detail was recorded'),
        ),
        migrations.AlterField(
            model_name='groupdet',
            name='frm_grp_id',
            field=models.ForeignKey(blank=True, db_column='FROM_GROUP_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.group', verbose_name='From Parent Group'),
        ),
        migrations.AlterField(
            model_name='groupdet',
            name='grpd_valid',
            field=models.BooleanField(db_column='STILL_VALID', default='True', verbose_name='Detail still valid?'),
        ),
        migrations.AlterField(
            model_name='heathunit',
            name='inservice_date',
            field=models.DateField(db_column='INSERVICE_DATE', verbose_name='Date unit was put into service'),
        ),
        migrations.AlterField(
            model_name='heathunit',
            name='manufacturer',
            field=models.CharField(db_column='MANUFACTURER', max_length=35, verbose_name='Maufacturer'),
        ),
        migrations.AlterField(
            model_name='heathunit',
            name='serial_number',
            field=models.CharField(db_column='SERIAL_NUMBER', max_length=50, verbose_name='Serial Number'),
        ),
        migrations.AlterField(
            model_name='heathunitdet',
            name='heat_id',
            field=models.ForeignKey(db_column='HEATH_UNIT_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.heathunit', verbose_name='Heath Unit'),
        ),
        migrations.AlterField(
            model_name='image',
            name='cntd_id',
            field=models.ForeignKey(blank=True, db_column='COUNT_ID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='bio_diversity.countdet', verbose_name='Count Detail'),
        ),
        migrations.AlterField(
            model_name='image',
            name='comments',
            field=models.CharField(blank=True, db_column='COMMENTS', max_length=2000, null=True, verbose_name='Comments'),
        ),
        migrations.AlterField(
            model_name='image',
            name='cupd_id',
            field=models.ForeignKey(blank=True, db_column='CUP_DET_ID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='bio_diversity.cupdet', verbose_name='Cup Detail'),
        ),
        migrations.AlterField(
            model_name='image',
            name='draw_id',
            field=models.ForeignKey(blank=True, db_column='DRAWER_ID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='bio_diversity.drawer', verbose_name='Drawer'),
        ),
        migrations.AlterField(
            model_name='image',
            name='grpd_id',
            field=models.ForeignKey(blank=True, db_column='GROUP_DET_ID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='bio_diversity.groupdet', verbose_name='Group Detail'),
        ),
        migrations.AlterField(
            model_name='image',
            name='heatd_id',
            field=models.ForeignKey(blank=True, db_column='HEATH_UNIT_DET_ID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='bio_diversity.heathunitdet', verbose_name='Heath Unit Detail'),
        ),
        migrations.AlterField(
            model_name='image',
            name='img_png',
            field=models.FileField(blank=True, db_column='IMAGE', null=True, upload_to=bio_diversity.models.img_directory_path, verbose_name='Image File'),
        ),
        migrations.AlterField(
            model_name='image',
            name='imgc_id',
            field=models.ForeignKey(db_column='IMG_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.imagecode', verbose_name='Image Code'),
        ),
        migrations.AlterField(
            model_name='image',
            name='indvd_id',
            field=models.ForeignKey(blank=True, db_column='INDIV_DET_ID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='bio_diversity.individualdet', verbose_name='Individual Detail'),
        ),
        migrations.AlterField(
            model_name='image',
            name='loc_id',
            field=models.ForeignKey(blank=True, db_column='LOCATION_ID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='bio_diversity.location', verbose_name='Location'),
        ),
        migrations.AlterField(
            model_name='image',
            name='sampd_id',
            field=models.ForeignKey(blank=True, db_column='SAMP_DET_ID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='bio_diversity.sampledet', verbose_name='Sample Detail'),
        ),
        migrations.AlterField(
            model_name='image',
            name='spwnd_id',
            field=models.ForeignKey(blank=True, db_column='SPAWN_DETAIL_ID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='bio_diversity.spawndet', verbose_name='Spawn Detail'),
        ),
        migrations.AlterField(
            model_name='image',
            name='tankd_id',
            field=models.ForeignKey(blank=True, db_column='TANK_DET_ID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='bio_diversity.tankdet', verbose_name='Tank Detail'),
        ),
        migrations.AlterField(
            model_name='image',
            name='trayd_id',
            field=models.ForeignKey(blank=True, db_column='TRAY_DET_ID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='bio_diversity.traydet', verbose_name='Tray Detail'),
        ),
        migrations.AlterField(
            model_name='image',
            name='trofd_id',
            field=models.ForeignKey(blank=True, db_column='TROUGH_DET_ID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='bio_diversity.troughdet', verbose_name='Trough Detail'),
        ),
        migrations.AlterField(
            model_name='individual',
            name='coll_id',
            field=models.ForeignKey(blank=True, db_column='COLLECTION_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.collection', verbose_name='Collection'),
        ),
        migrations.AlterField(
            model_name='individual',
            name='comments',
            field=models.CharField(blank=True, db_column='COMMENTS', max_length=2000, null=True, verbose_name='Comments'),
        ),
        migrations.AlterField(
            model_name='individual',
            name='grp_id',
            field=models.ForeignKey(blank=True, db_column='GROUP_ID', limit_choices_to={'grp_valid': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.group', verbose_name='From Parent Group'),
        ),
        migrations.AlterField(
            model_name='individual',
            name='indv_valid',
            field=models.BooleanField(db_column='STILL_VALID', default='True', verbose_name='Entry still valid?'),
        ),
        migrations.AlterField(
            model_name='individual',
            name='indv_year',
            field=models.IntegerField(db_column='YEAR', default=2000, validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2100)], verbose_name='Collection year'),
        ),
        migrations.AlterField(
            model_name='individual',
            name='pit_tag',
            field=models.CharField(blank=True, db_column='PIT_TAG', max_length=50, null=True, unique=True, verbose_name='PIT tag ID'),
        ),
        migrations.AlterField(
            model_name='individual',
            name='spec_id',
            field=models.ForeignKey(db_column='SPEC_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.speciescode', verbose_name='Species'),
        ),
        migrations.AlterField(
            model_name='individual',
            name='stok_id',
            field=models.ForeignKey(db_column='STOCK_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.stockcode', verbose_name='Stock Code'),
        ),
        migrations.AlterField(
            model_name='individual',
            name='ufid',
            field=models.CharField(blank=True, db_column='UFID', max_length=50, null=True, unique=True, verbose_name='ABL Fish UFID'),
        ),
        migrations.AlterField(
            model_name='individualdet',
            name='adsc_id',
            field=models.ForeignKey(blank=True, db_column='ANI_DET_SUBJ_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.anidetsubjcode', verbose_name='Animal Detail Subjective Code'),
        ),
        migrations.AlterField(
            model_name='individualdet',
            name='anidc_id',
            field=models.ForeignKey(db_column='ANI_DET_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.animaldetcode', verbose_name='Animal Detail Code'),
        ),
        migrations.AlterField(
            model_name='individualdet',
            name='anix_id',
            field=models.ForeignKey(db_column='ANI_DET_XREF_ID', on_delete=django.db.models.deletion.CASCADE, related_name='individual_details', to='bio_diversity.anidetailxref', verbose_name='Animal Detail Cross Reference'),
        ),
        migrations.AlterField(
            model_name='individualdet',
            name='det_val',
            field=models.CharField(blank=True, db_column='VAL', max_length=20, null=True, verbose_name='Value'),
        ),
        migrations.AlterField(
            model_name='individualdet',
            name='detail_date',
            field=models.DateField(db_column='DETAIL_DATE', verbose_name='Date detail was recorded'),
        ),
        migrations.AlterField(
            model_name='individualdet',
            name='indvd_valid',
            field=models.BooleanField(db_column='STILL_VALID', default='True', verbose_name='Detail still valid?'),
        ),
        migrations.AlterField(
            model_name='indtreatcode',
            name='manufacturer',
            field=models.CharField(db_column='IND_MANUFACTURER', max_length=50, verbose_name='Treatment Manufacturer'),
        ),
        migrations.AlterField(
            model_name='indtreatcode',
            name='rec_dose',
            field=models.CharField(db_column='IND_REC_DOSAGE', max_length=400, verbose_name='Recommended Dosage'),
        ),
        migrations.AlterField(
            model_name='indtreatment',
            name='comments',
            field=models.CharField(blank=True, db_column='COMMENTS', max_length=2000, null=True, verbose_name='Comments'),
        ),
        migrations.AlterField(
            model_name='indtreatment',
            name='dose',
            field=models.DecimalField(db_column='DOSE', decimal_places=3, max_digits=7, verbose_name='Dose'),
        ),
        migrations.AlterField(
            model_name='indtreatment',
            name='indvtc_id',
            field=models.ForeignKey(db_column='IND_TEART_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.indtreatcode', verbose_name='Individual Treatment Code'),
        ),
        migrations.AlterField(
            model_name='indtreatment',
            name='lot_num',
            field=models.CharField(db_column='LOT_NUMBER', max_length=30, verbose_name='Lot Number'),
        ),
        migrations.AlterField(
            model_name='indtreatment',
            name='unit_id',
            field=models.ForeignKey(db_column='UNIT_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.unitcode', verbose_name='Units'),
        ),
        migrations.AlterField(
            model_name='instrument',
            name='comments',
            field=models.CharField(blank=True, db_column='COMMENTS', max_length=2000, null=True, verbose_name='Comments'),
        ),
        migrations.AlterField(
            model_name='instrument',
            name='instc_id',
            field=models.ForeignKey(db_column='INST_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.instrumentcode', verbose_name='Instrument Code'),
        ),
        migrations.AlterField(
            model_name='instrument',
            name='serial_number',
            field=models.CharField(blank=True, db_column='SERIAL_NUMBER', max_length=250, null=True, unique=True, verbose_name='Serial Number'),
        ),
        migrations.AlterField(
            model_name='instrumentdet',
            name='det_value',
            field=models.DecimalField(db_column='VAL', decimal_places=5, max_digits=11, verbose_name='Value'),
        ),
        migrations.AlterField(
            model_name='instrumentdet',
            name='inst_id',
            field=models.ForeignKey(db_column='INSTRUM_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.instrument', verbose_name='Instrument'),
        ),
        migrations.AlterField(
            model_name='instrumentdet',
            name='instdc_id',
            field=models.ForeignKey(db_column='INST_DET_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.instdetcode', verbose_name='Instrument Detail Code'),
        ),
        migrations.AlterField(
            model_name='location',
            name='comments',
            field=models.CharField(blank=True, db_column='COMMENTS', max_length=2000, null=True, verbose_name='Comments'),
        ),
        migrations.AlterField(
            model_name='location',
            name='end_lat',
            field=models.DecimalField(blank=True, db_column='END_LATITUDE', decimal_places=5, max_digits=7, null=True, verbose_name='End Latitude'),
        ),
        migrations.AlterField(
            model_name='location',
            name='end_lon',
            field=models.DecimalField(blank=True, db_column='END_LONGITUDE', decimal_places=5, max_digits=8, null=True, verbose_name='End Longitude'),
        ),
        migrations.AlterField(
            model_name='location',
            name='evnt_id',
            field=models.ForeignKey(db_column='EVENT_ID', on_delete=django.db.models.deletion.CASCADE, related_name='location', to='bio_diversity.event', verbose_name='Event'),
        ),
        migrations.AlterField(
            model_name='location',
            name='loc_date',
            field=models.DateTimeField(db_column='LOCATION_DATE', verbose_name='Start date'),
        ),
        migrations.AlterField(
            model_name='location',
            name='loc_lat',
            field=models.DecimalField(blank=True, db_column='LATITUDE', decimal_places=5, max_digits=7, null=True, verbose_name='Latitude'),
        ),
        migrations.AlterField(
            model_name='location',
            name='loc_lon',
            field=models.DecimalField(blank=True, db_column='LONGITUDE', decimal_places=5, max_digits=8, null=True, verbose_name='Longitude'),
        ),
        migrations.AlterField(
            model_name='location',
            name='locc_id',
            field=models.ForeignKey(db_column='LOC_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.loccode', verbose_name='Location Code'),
        ),
        migrations.AlterField(
            model_name='location',
            name='relc_id',
            field=models.ForeignKey(blank=True, db_column='SITE_ID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='bio_diversity.releasesitecode', verbose_name='Site Code'),
        ),
        migrations.AlterField(
            model_name='location',
            name='rive_id',
            field=models.ForeignKey(blank=True, db_column='RIVER_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.rivercode', verbose_name='River'),
        ),
        migrations.AlterField(
            model_name='location',
            name='subr_id',
            field=models.ForeignKey(blank=True, db_column='SUBRIVER_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.subrivercode', verbose_name='SubRiver Code'),
        ),
        migrations.AlterField(
            model_name='location',
            name='trib_id',
            field=models.ForeignKey(blank=True, db_column='TRIB_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.tributary', verbose_name='Tributary'),
        ),
        migrations.AlterField(
            model_name='pairing',
            name='cross',
            field=models.IntegerField(db_column='CROSS', verbose_name='Cross'),
        ),
        migrations.AlterField(
            model_name='pairing',
            name='indv_id',
            field=models.ForeignKey(db_column='DAM', limit_choices_to={'indv_valid': True, 'pit_tag__isnull': False}, on_delete=django.db.models.deletion.CASCADE, related_name='pairings', to='bio_diversity.individual', verbose_name='Dam'),
        ),
        migrations.AlterField(
            model_name='pairing',
            name='pair_prio_id',
            field=models.ForeignKey(db_column='PAIR_PRIORITY_ID', on_delete=django.db.models.deletion.CASCADE, related_name='pair_priorities', to='bio_diversity.prioritycode', verbose_name='Priority of Pair'),
        ),
        migrations.AlterField(
            model_name='pairing',
            name='prio_id',
            field=models.ForeignKey(db_column='PRIORITY_ID', on_delete=django.db.models.deletion.CASCADE, related_name='female_priorities', to='bio_diversity.prioritycode', verbose_name='Priority of Female'),
        ),
        migrations.AlterField(
            model_name='progauthority',
            name='proga_first_name',
            field=models.CharField(db_column='PROG_AUTH_FIRST_NAME', max_length=32, verbose_name='First Name'),
        ),
        migrations.AlterField(
            model_name='progauthority',
            name='proga_last_name',
            field=models.CharField(db_column='PROG_AUTH_LAST_NAME', max_length=32, verbose_name='Last Name'),
        ),
        migrations.AlterField(
            model_name='program',
            name='orga_id',
            field=models.ForeignKey(db_column='ORG_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.organization', verbose_name='Organization'),
        ),
        migrations.AlterField(
            model_name='program',
            name='prog_desc',
            field=models.CharField(db_column='PROGRAM_DESC', max_length=4000, verbose_name='Program Description'),
        ),
        migrations.AlterField(
            model_name='program',
            name='prog_name',
            field=models.CharField(db_column='PROGRAM_NAME', max_length=30, unique=True, verbose_name='Program Name'),
        ),
        migrations.AlterField(
            model_name='program',
            name='proga_id',
            field=models.ForeignKey(db_column='PROG_AUTH_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.progauthority', verbose_name='Program Authority'),
        ),
        migrations.AlterField(
            model_name='protocol',
            name='evntc_id',
            field=models.ForeignKey(blank=True, db_column='EVT_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.eventcode', verbose_name='Event Code'),
        ),
        migrations.AlterField(
            model_name='protocol',
            name='facic_id',
            field=models.ForeignKey(db_column='FAC_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.facilitycode', verbose_name='Facility'),
        ),
        migrations.AlterField(
            model_name='protocol',
            name='name',
            field=models.CharField(db_column='PROTOCOL_NAME', max_length=25, verbose_name='Protocol Name'),
        ),
        migrations.AlterField(
            model_name='protocol',
            name='prog_id',
            field=models.ForeignKey(db_column='PROGRAM_ID', limit_choices_to={'valid': True}, on_delete=django.db.models.deletion.CASCADE, related_name='protocols', to='bio_diversity.program', verbose_name='Program'),
        ),
        migrations.AlterField(
            model_name='protocol',
            name='prot_desc',
            field=models.CharField(db_column='PROTOCOL_DESC', max_length=4000, verbose_name='Protocol Description'),
        ),
        migrations.AlterField(
            model_name='protocol',
            name='protc_id',
            field=models.ForeignKey(db_column='PROTO_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.protocode', verbose_name='Protocol Code'),
        ),
        migrations.AlterField(
            model_name='protofile',
            name='comments',
            field=models.CharField(blank=True, db_column='COMMENTS', max_length=2000, null=True, verbose_name='Comments'),
        ),
        migrations.AlterField(
            model_name='protofile',
            name='prot_id',
            field=models.ForeignKey(db_column='PROTOCOL_ID', limit_choices_to={'valid': True}, on_delete=django.db.models.deletion.CASCADE, related_name='protf_id', to='bio_diversity.protocol', verbose_name='Protocol'),
        ),
        migrations.AlterField(
            model_name='protofile',
            name='protf_pdf',
            field=models.FileField(blank=True, db_column='PROTO_FILE', null=True, upload_to=bio_diversity.models.protf_directory_path, verbose_name='Protocol File'),
        ),
        migrations.AlterField(
            model_name='releasesitecode',
            name='max_lat',
            field=models.DecimalField(blank=True, db_column='MAX_LATITUDE', decimal_places=5, max_digits=7, null=True, verbose_name='Max Latitude'),
        ),
        migrations.AlterField(
            model_name='releasesitecode',
            name='max_lon',
            field=models.DecimalField(blank=True, db_column='MAX_LONGITUDE', decimal_places=5, max_digits=8, null=True, verbose_name='Max Longitude'),
        ),
        migrations.AlterField(
            model_name='releasesitecode',
            name='min_lat',
            field=models.DecimalField(blank=True, db_column='MIN_LATITUDE', decimal_places=5, max_digits=7, null=True, verbose_name='Min Latitude'),
        ),
        migrations.AlterField(
            model_name='releasesitecode',
            name='min_lon',
            field=models.DecimalField(blank=True, db_column='MIN_LONGITUDE', decimal_places=5, max_digits=8, null=True, verbose_name='Min Longitude'),
        ),
        migrations.AlterField(
            model_name='releasesitecode',
            name='rive_id',
            field=models.ForeignKey(db_column='RIVER_ID', on_delete=django.db.models.deletion.CASCADE, related_name='sites', to='bio_diversity.rivercode', verbose_name='River'),
        ),
        migrations.AlterField(
            model_name='releasesitecode',
            name='subr_id',
            field=models.ForeignKey(blank=True, db_column='SUBRIVER_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.subrivercode', verbose_name='SubRiver Code'),
        ),
        migrations.AlterField(
            model_name='releasesitecode',
            name='trib_id',
            field=models.ForeignKey(blank=True, db_column='TRIB_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.tributary', verbose_name='Tributary'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='comments',
            field=models.CharField(blank=True, db_column='COMMENTS', max_length=2000, null=True, verbose_name='Comments'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='loc_id',
            field=models.ForeignKey(db_column='LOCATION_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.location', verbose_name='Location'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='samp_num',
            field=models.IntegerField(db_column='SAMPLE_FISHNO', verbose_name='Sample Fish Number'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='sampc_id',
            field=models.ForeignKey(db_column='SAMP_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.samplecode', verbose_name='Sample Code'),
        ),
        migrations.AlterField(
            model_name='sample',
            name='spec_id',
            field=models.ForeignKey(db_column='SPEC_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.speciescode', verbose_name='Species'),
        ),
        migrations.AlterField(
            model_name='sampledet',
            name='adsc_id',
            field=models.ForeignKey(blank=True, db_column='ANI_DET_SUBJ_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.anidetsubjcode', verbose_name='Animal Detail Subjective Code'),
        ),
        migrations.AlterField(
            model_name='sampledet',
            name='anidc_id',
            field=models.ForeignKey(db_column='ANI_DET_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.animaldetcode', verbose_name='Animal Detail Code'),
        ),
        migrations.AlterField(
            model_name='sampledet',
            name='samp_id',
            field=models.ForeignKey(db_column='SAMPLE_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.sample', verbose_name='Sample'),
        ),
        migrations.AlterField(
            model_name='sire',
            name='choice',
            field=models.IntegerField(db_column='CHOICE', verbose_name='Choice'),
        ),
        migrations.AlterField(
            model_name='sire',
            name='comments',
            field=models.CharField(blank=True, db_column='COMMENTS', max_length=2000, null=True, verbose_name='Comments'),
        ),
        migrations.AlterField(
            model_name='sire',
            name='indv_id',
            field=models.ForeignKey(db_column='UFID', limit_choices_to={'indv_valid': True, 'pit_tag__isnull': False}, on_delete=django.db.models.deletion.CASCADE, related_name='sires', to='bio_diversity.individual', verbose_name='Sire'),
        ),
        migrations.AlterField(
            model_name='sire',
            name='pair_id',
            field=models.ForeignKey(db_column='PAIR_ID', limit_choices_to={'valid': True}, on_delete=django.db.models.deletion.CASCADE, related_name='sires', to='bio_diversity.pairing', verbose_name='Pairing'),
        ),
        migrations.AlterField(
            model_name='sire',
            name='prio_id',
            field=models.ForeignKey(db_column='PRIORITY_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.prioritycode', verbose_name='Priority'),
        ),
        migrations.AlterField(
            model_name='spawndet',
            name='pair_id',
            field=models.ForeignKey(db_column='PAIR_ID', on_delete=django.db.models.deletion.CASCADE, related_name='spawning_details', to='bio_diversity.pairing', verbose_name='Pairing'),
        ),
        migrations.AlterField(
            model_name='spawndet',
            name='spwndc_id',
            field=models.ForeignKey(db_column='SPAWN_DET_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.spawndetcode', verbose_name='Spawning Detail Code'),
        ),
        migrations.AlterField(
            model_name='spawndet',
            name='spwnsc_id',
            field=models.ForeignKey(blank=True, db_column='SPAWN_DET_SUBJ_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.spawndetsubjcode', verbose_name='Spawning Detail Subjective Code'),
        ),
        migrations.AlterField(
            model_name='spawndetcode',
            name='max_val',
            field=models.DecimalField(blank=True, db_column='MAX_VAL', decimal_places=5, max_digits=11, null=True, verbose_name='Maximum Value'),
        ),
        migrations.AlterField(
            model_name='spawndetcode',
            name='min_val',
            field=models.DecimalField(blank=True, db_column='MIN_VAL', decimal_places=5, max_digits=11, null=True, verbose_name='Minimum Value'),
        ),
        migrations.AlterField(
            model_name='spawndetcode',
            name='spwn_subj_flag',
            field=models.BooleanField(db_column='SPAWN_SUBJ_FLAG', verbose_name='Subjective?'),
        ),
        migrations.AlterField(
            model_name='spawndetcode',
            name='unit_id',
            field=models.ForeignKey(blank=True, db_column='UNIT_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.unitcode', verbose_name='Units'),
        ),
        migrations.AlterField(
            model_name='speciescode',
            name='com_name',
            field=models.CharField(blank=True, db_column='COMMON_NAME', max_length=35, null=True, verbose_name='Species Common Name'),
        ),
        migrations.AlterField(
            model_name='speciescode',
            name='name',
            field=models.CharField(db_column='SPEC_SHORT', max_length=10, verbose_name='Species Name'),
        ),
        migrations.AlterField(
            model_name='speciescode',
            name='species',
            field=models.CharField(db_column='SPECIES', max_length=100, verbose_name='Species'),
        ),
        migrations.AlterField(
            model_name='subrivercode',
            name='rive_id',
            field=models.ForeignKey(db_column='RIVER_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.rivercode', verbose_name='River'),
        ),
        migrations.AlterField(
            model_name='subrivercode',
            name='trib_id',
            field=models.ForeignKey(blank=True, db_column='TRIB_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.tributary', verbose_name='Tributary'),
        ),
        migrations.AlterField(
            model_name='tankdet',
            name='tank_id',
            field=models.ForeignKey(db_column='TANK_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.tank', verbose_name='Tank'),
        ),
        migrations.AlterField(
            model_name='tray',
            name='end_date',
            field=models.DateField(blank=True, db_column='END_DATE', null=True, verbose_name='End Date'),
        ),
        migrations.AlterField(
            model_name='tray',
            name='start_date',
            field=models.DateField(db_column='START_DATE', verbose_name='Start Date'),
        ),
        migrations.AlterField(
            model_name='tray',
            name='trof_id',
            field=models.ForeignKey(db_column='TROUGH_ID', on_delete=django.db.models.deletion.CASCADE, related_name='trays', to='bio_diversity.trough', verbose_name='Trough'),
        ),
        migrations.AlterField(
            model_name='traydet',
            name='tray_id',
            field=models.ForeignKey(db_column='TRAY_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.tray', verbose_name='Tray'),
        ),
        migrations.AlterField(
            model_name='tributary',
            name='rive_id',
            field=models.ForeignKey(db_column='RIVER_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.rivercode', verbose_name='River'),
        ),
        migrations.AlterField(
            model_name='troughdet',
            name='trof_id',
            field=models.ForeignKey(db_column='TROUGH_ID', on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.trough', verbose_name='Trough'),
        ),
    ]
