# Generated by Django 3.2 on 2021-04-30 13:32

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('bio_diversity', '0004_auto_20210423_0819'),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name='containerxref',
            name='Container_Cross_Reference_Uniqueness',
        ),
        migrations.RemoveConstraint(
            model_name='sample',
            name='Sample_Uniqueness',
        ),
        migrations.AddField(
            model_name='containerxref',
            name='team_id',
            field=models.ForeignKey(blank=True, db_column='TEAM_ID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contxs', to='bio_diversity.teamxref', verbose_name='Team'),
        ),
        migrations.AddField(
            model_name='sample',
            name='anix_id',
            field=models.ForeignKey(blank=True, db_column='ANI_DET_X_REF_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.anidetailxref', verbose_name='Animal Detail X Ref'),
        ),
        migrations.AddField(
            model_name='sampledet',
            name='detail_date',
            field=models.DateField(db_column='DETAIL_DATE', default=datetime.date(2021, 4, 30), verbose_name='Date detail was recorded'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='sample',
            name='loc_id',
            field=models.ForeignKey(blank=True, db_column='LOCATION_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.location', verbose_name='Location'),
        ),
        migrations.AddConstraint(
            model_name='containerxref',
            constraint=models.UniqueConstraint(fields=('evnt_id', 'tank_id', 'trof_id', 'tray_id', 'heat_id', 'draw_id', 'cup_id', 'team_id'), name='Container_Cross_Reference_Uniqueness'),
        ),
        migrations.AddConstraint(
            model_name='sample',
            constraint=models.UniqueConstraint(fields=('loc_id', 'anix_id', 'samp_num', 'spec_id', 'sampc_id'), name='Sample_Uniqueness'),
        ),
    ]
