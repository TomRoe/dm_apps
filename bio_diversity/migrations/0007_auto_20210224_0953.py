# Generated by Django 3.1.2 on 2021-02-24 13:53

import bio_diversity.models
import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('bio_diversity', '0006_auto_20210210_0840'),
    ]

    operations = [
        migrations.CreateModel(
            name='MatingPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(max_length=32, verbose_name='Created By')),
                ('created_date', models.DateField(verbose_name='Created Date')),
                ('matp_xls', models.FileField(blank=True, null=True, upload_to=bio_diversity.models.matp_directory_path, verbose_name='Mating Plan File')),
                ('comments', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Comments')),
            ],
        ),
        migrations.RemoveConstraint(
            model_name='anidetailxref',
            name='Animal_Detail_Cross_Reference_Uniqueness',
        ),
        migrations.RemoveConstraint(
            model_name='envcondition',
            name='Environment_Condition_Uniqueness',
        ),
        migrations.RemoveConstraint(
            model_name='fecundity',
            name='Fecundity_Uniqueness',
        ),
        migrations.RemoveConstraint(
            model_name='spawndet',
            name='Spawning_Detail_Uniqueness',
        ),
        migrations.RemoveConstraint(
            model_name='spawning',
            name='Spawning_Uniqueness',
        ),
        migrations.RemoveField(
            model_name='anidetailxref',
            name='spwn_id',
        ),
        migrations.RemoveField(
            model_name='spawndet',
            name='spwn_id',
        ),
        migrations.AddField(
            model_name='anidetailxref',
            name='pair_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.pairing', verbose_name='Pairing'),
        ),
        migrations.AddField(
            model_name='cup',
            name='facic_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.facilitycode', verbose_name='Facility'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='dataloader',
            name='tank_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.tank', verbose_name='Destination Tank'),
        ),
        migrations.AddField(
            model_name='drawer',
            name='facic_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.facilitycode', verbose_name='Facility'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='fecundity',
            name='evnt_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.event', verbose_name='Event'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='group',
            name='grp_year',
            field=models.IntegerField(default=2000, validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2100)], verbose_name='Collection year'),
        ),
        migrations.AddField(
            model_name='groupdet',
            name='detail_date',
            field=models.DateField(default=datetime.date(2021, 2, 24), verbose_name='Date detail was recorded'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='heathunit',
            name='facic_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.facilitycode', verbose_name='Facility'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='individual',
            name='indv_year',
            field=models.IntegerField(default=2000, validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2100)], verbose_name='Collection year'),
        ),
        migrations.AddField(
            model_name='individualdet',
            name='detail_date',
            field=models.DateField(default=datetime.date(2021, 2, 24), verbose_name='Date detail was recorded'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='personnelcode',
            name='initials',
            field=models.CharField(blank=True, max_length=4, null=True, verbose_name='Initials'),
        ),
        migrations.AddField(
            model_name='protocol',
            name='facic_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.facilitycode', verbose_name='Facility'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='spawndet',
            name='pair_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.pairing', verbose_name='Pairing'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='tank',
            name='facic_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.facilitycode', verbose_name='Facility'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='tray',
            name='facic_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.facilitycode', verbose_name='Facility'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='trough',
            name='facic_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.facilitycode', verbose_name='Facility'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='anidetailxref',
            name='contx_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='anixs', to='bio_diversity.containerxref', verbose_name='Container Cross Reference'),
        ),
        migrations.AlterField(
            model_name='anidetailxref',
            name='final_contx_flag',
            field=models.BooleanField(blank=True, default=None, null=True, verbose_name='Final Container in movement'),
        ),
        migrations.AlterField(
            model_name='containerxref',
            name='cup_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contxs', to='bio_diversity.cup', verbose_name='Cup'),
        ),
        migrations.AlterField(
            model_name='containerxref',
            name='draw_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contxs', to='bio_diversity.drawer', verbose_name='Drawer'),
        ),
        migrations.AlterField(
            model_name='containerxref',
            name='heat_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contxs', to='bio_diversity.heathunit', verbose_name='Heath Unit'),
        ),
        migrations.AlterField(
            model_name='containerxref',
            name='tank_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contxs', to='bio_diversity.tank', verbose_name='Tank'),
        ),
        migrations.AlterField(
            model_name='containerxref',
            name='tray_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contxs', to='bio_diversity.tray', verbose_name='Tray'),
        ),
        migrations.AlterField(
            model_name='containerxref',
            name='trof_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contxs', to='bio_diversity.trough', verbose_name='Trough'),
        ),
        migrations.AlterField(
            model_name='cup',
            name='name',
            field=models.CharField(max_length=255, verbose_name='name (en)'),
        ),
        migrations.AlterField(
            model_name='drawer',
            name='name',
            field=models.CharField(max_length=255, verbose_name='name (en)'),
        ),
        migrations.AlterField(
            model_name='envcondition',
            name='inst_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.instrument', verbose_name='Instrument'),
        ),
        migrations.AlterField(
            model_name='heathunit',
            name='name',
            field=models.CharField(max_length=255, verbose_name='name (en)'),
        ),
        migrations.AlterField(
            model_name='location',
            name='relc_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bio_diversity.releasesitecode', verbose_name='Site Code'),
        ),
        migrations.AlterField(
            model_name='tank',
            name='name',
            field=models.CharField(max_length=255, verbose_name='name (en)'),
        ),
        migrations.AlterField(
            model_name='tray',
            name='name',
            field=models.CharField(max_length=255, verbose_name='name (en)'),
        ),
        migrations.AlterField(
            model_name='trough',
            name='name',
            field=models.CharField(max_length=255, verbose_name='name (en)'),
        ),
        migrations.AddConstraint(
            model_name='anidetailxref',
            constraint=models.UniqueConstraint(fields=('evnt_id', 'contx_id', 'loc_id', 'indvt_id', 'indv_id', 'pair_id', 'grp_id'), name='Animal_Detail_Cross_Reference_Uniqueness'),
        ),
        migrations.AddConstraint(
            model_name='cup',
            constraint=models.UniqueConstraint(fields=('name', 'facic_id'), name='cup_uniqueness'),
        ),
        migrations.AddConstraint(
            model_name='drawer',
            constraint=models.UniqueConstraint(fields=('name', 'facic_id'), name='draw_uniqueness'),
        ),
        migrations.AddConstraint(
            model_name='envcondition',
            constraint=models.UniqueConstraint(fields=('contx_id', 'loc_id', 'inst_id', 'envc_id', 'envsc_id', 'start_datetime'), name='Environment_Condition_Uniqueness'),
        ),
        migrations.AddConstraint(
            model_name='fecundity',
            constraint=models.UniqueConstraint(fields=('stok_id', 'coll_id', 'start_date', 'evnt_id'), name='Fecundity_Uniqueness'),
        ),
        migrations.AddConstraint(
            model_name='heathunit',
            constraint=models.UniqueConstraint(fields=('name', 'facic_id'), name='heat_uniqueness'),
        ),
        migrations.AddConstraint(
            model_name='sire',
            constraint=models.UniqueConstraint(fields=('indv_id', 'pair_id'), name='Sire_Uniqueness'),
        ),
        migrations.AddConstraint(
            model_name='spawndet',
            constraint=models.UniqueConstraint(fields=('pair_id', 'spwndc_id', 'spwnsc_id'), name='Spawning_Detail_Uniqueness'),
        ),
        migrations.AddConstraint(
            model_name='tank',
            constraint=models.UniqueConstraint(fields=('name', 'facic_id'), name='tank_uniqueness'),
        ),
        migrations.AddConstraint(
            model_name='tray',
            constraint=models.UniqueConstraint(fields=('name', 'facic_id'), name='tray_uniqueness'),
        ),
        migrations.AddConstraint(
            model_name='trough',
            constraint=models.UniqueConstraint(fields=('name', 'facic_id'), name='trof_uniqueness'),
        ),
        migrations.AddField(
            model_name='matingplan',
            name='evnt_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mating_plan', to='bio_diversity.event', verbose_name='Event'),
        ),
        migrations.AddField(
            model_name='matingplan',
            name='stok_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mating_plan', to='bio_diversity.stockcode', verbose_name='Stock Code'),
        ),
        migrations.AddConstraint(
            model_name='matingplan',
            constraint=models.UniqueConstraint(fields=('evnt_id', 'stok_id'), name='Mating_Plan_Uniqueness'),
        ),
    ]
